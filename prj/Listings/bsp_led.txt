; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\objects\bsp_led.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\bsp_led.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\inc -I..\driver\inc -I.\src -I.\User -I.\User\led -I.\User\usart -I.\User\timer -I.\User\ir -I.\User\2.4G -I.\User\spi0 -IF:\1708\dock\prj\RTE -I"D:\Program Files (x86)\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\Device\ARM\ARMCM0\Include" -I"D:\Program Files (x86)\Keil_v5\ARM\CMSIS\Include" -D__MICROLIB -D__UVISION_VERSION=514 -DARMCM0 -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\bsp_led.crf User\led\bsp_led.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  LED_GPIO_Config PROC
;;;17       */
;;;18     void LED_GPIO_Config(void)
000000  b510              PUSH     {r4,lr}
;;;19     {		
;;;20     	/* LED1 */
;;;21     	GPIO_DirectionConfig(LED1_GPIO_PORT,LED1_PIN,GPIO_DIR_OUT);  //设置引脚模式为输出模式
000002  2201              MOVS     r2,#1
000004  0211              LSLS     r1,r2,#8
000006  4879              LDR      r0,|L1.492|
000008  f7fffffe          BL       GPIO_DirectionConfig
;;;22     	GPIO_PullResistorConfig(LED1_GPIO_PORT,LED1_PIN,GPIO_PR_UP); //设置引脚为上拉模式
00000c  2200              MOVS     r2,#0
00000e  21ff              MOVS     r1,#0xff
000010  3101              ADDS     r1,#1
000012  4876              LDR      r0,|L1.492|
000014  f7fffffe          BL       GPIO_PullResistorConfig
;;;23     	//GPIO_InputConfig(LED1_GPIO_PORT,LED1_PIN,ENABLE);
;;;24     	GPIO_DriveConfig(LED1_GPIO_PORT,LED1_PIN,GPIO_DV_6MA);  //设置引脚的输出类型为6mA输出
000018  2201              MOVS     r2,#1
00001a  0211              LSLS     r1,r2,#8
00001c  4873              LDR      r0,|L1.492|
00001e  f7fffffe          BL       GPIO_DriveConfig
;;;25     	GPIO_OpenDrainConfig(LED1_GPIO_PORT,LED1_PIN,DISABLE);  //关闭开漏输出
000022  2200              MOVS     r2,#0
000024  21ff              MOVS     r1,#0xff
000026  3101              ADDS     r1,#1
000028  4870              LDR      r0,|L1.492|
00002a  f7fffffe          BL       GPIO_OpenDrainConfig
;;;26     	
;;;27     	/* LED2 */
;;;28     	GPIO_DirectionConfig(LED2_GPIO_PORT,LED2_PIN,GPIO_DIR_OUT);  //设置引脚模式为输出模式
00002e  2201              MOVS     r2,#1
000030  02d1              LSLS     r1,r2,#11
000032  486f              LDR      r0,|L1.496|
000034  f7fffffe          BL       GPIO_DirectionConfig
;;;29     	GPIO_PullResistorConfig(LED2_GPIO_PORT,LED2_PIN,GPIO_PR_UP); //设置引脚为上拉模式
000038  2200              MOVS     r2,#0
00003a  2101              MOVS     r1,#1
00003c  02c9              LSLS     r1,r1,#11
00003e  486c              LDR      r0,|L1.496|
000040  f7fffffe          BL       GPIO_PullResistorConfig
;;;30     	//GPIO_InputConfig(LED2_GPIO_PORT,LED2_PIN,ENABLE);
;;;31     	GPIO_DriveConfig(LED2_GPIO_PORT,LED2_PIN,GPIO_DV_6MA);  //设置引脚的输出类型为6mA输出
000044  2201              MOVS     r2,#1
000046  02d1              LSLS     r1,r2,#11
000048  4869              LDR      r0,|L1.496|
00004a  f7fffffe          BL       GPIO_DriveConfig
;;;32     	GPIO_OpenDrainConfig(LED2_GPIO_PORT,LED2_PIN,DISABLE);  //关闭开漏输出
00004e  2200              MOVS     r2,#0
000050  2101              MOVS     r1,#1
000052  02c9              LSLS     r1,r1,#11
000054  4866              LDR      r0,|L1.496|
000056  f7fffffe          BL       GPIO_OpenDrainConfig
;;;33     	
;;;34     	/* LED3 */
;;;35     	GPIO_DirectionConfig(LED3_GPIO_PORT,LED3_PIN,GPIO_DIR_OUT);  //设置引脚模式为输出模式
00005a  2201              MOVS     r2,#1
00005c  2120              MOVS     r1,#0x20
00005e  4864              LDR      r0,|L1.496|
000060  f7fffffe          BL       GPIO_DirectionConfig
;;;36     	GPIO_PullResistorConfig(LED3_GPIO_PORT,LED3_PIN,GPIO_PR_UP); //设置引脚为上拉模式
000064  2200              MOVS     r2,#0
000066  2120              MOVS     r1,#0x20
000068  4861              LDR      r0,|L1.496|
00006a  f7fffffe          BL       GPIO_PullResistorConfig
;;;37     	//GPIO_InputConfig(LED3_GPIO_PORT,LED3_PIN,ENABLE);
;;;38     	GPIO_DriveConfig(LED3_GPIO_PORT,LED3_PIN,GPIO_DV_6MA);  //设置引脚的输出类型为6mA输出
00006e  2201              MOVS     r2,#1
000070  2120              MOVS     r1,#0x20
000072  485f              LDR      r0,|L1.496|
000074  f7fffffe          BL       GPIO_DriveConfig
;;;39     	GPIO_OpenDrainConfig(LED3_GPIO_PORT,LED3_PIN,DISABLE);  //关闭开漏输出
000078  2200              MOVS     r2,#0
00007a  2120              MOVS     r1,#0x20
00007c  485c              LDR      r0,|L1.496|
00007e  f7fffffe          BL       GPIO_OpenDrainConfig
;;;40     	
;;;41     	LED1(OFF);LED2(OFF);LED3(OFF);
000082  20ff              MOVS     r0,#0xff
000084  3001              ADDS     r0,#1
000086  4959              LDR      r1,|L1.492|
000088  6248              STR      r0,[r1,#0x24]
00008a  00c1              LSLS     r1,r0,#3
00008c  4858              LDR      r0,|L1.496|
00008e  f7fffffe          BL       GPIO_SetOutBits
000092  2120              MOVS     r1,#0x20
000094  4856              LDR      r0,|L1.496|
000096  f7fffffe          BL       GPIO_SetOutBits
;;;42     }
00009a  bd10              POP      {r4,pc}
;;;43     
                          ENDP

                  IR_GPIO_Config PROC
;;;44     void IR_GPIO_Config(void)
00009c  b510              PUSH     {r4,lr}
;;;45     {		
;;;46     	GPIO_DirectionConfig(AM_GPIOC,GPIO_PIN_4,GPIO_DIR_IN);  
00009e  2200              MOVS     r2,#0
0000a0  2110              MOVS     r1,#0x10
0000a2  4853              LDR      r0,|L1.496|
0000a4  f7fffffe          BL       GPIO_DirectionConfig
;;;47     	GPIO_PullResistorConfig(AM_GPIOC,GPIO_PIN_4,GPIO_PR_UP); 
0000a8  2200              MOVS     r2,#0
0000aa  2110              MOVS     r1,#0x10
0000ac  4850              LDR      r0,|L1.496|
0000ae  f7fffffe          BL       GPIO_PullResistorConfig
;;;48       GPIO_InputConfig(AM_GPIOC,GPIO_PIN_4,ENABLE);
0000b2  2201              MOVS     r2,#1
0000b4  2110              MOVS     r1,#0x10
0000b6  484e              LDR      r0,|L1.496|
0000b8  f7fffffe          BL       GPIO_InputConfig
;;;49     	
;;;50       GPIO_DirectionConfig(AM_GPIOB,GPIO_PIN_4,GPIO_DIR_IN);  
0000bc  2200              MOVS     r2,#0
0000be  2110              MOVS     r1,#0x10
0000c0  484a              LDR      r0,|L1.492|
0000c2  f7fffffe          BL       GPIO_DirectionConfig
;;;51     	GPIO_PullResistorConfig(AM_GPIOB,GPIO_PIN_4,GPIO_PR_UP); 
0000c6  2200              MOVS     r2,#0
0000c8  2110              MOVS     r1,#0x10
0000ca  4848              LDR      r0,|L1.492|
0000cc  f7fffffe          BL       GPIO_PullResistorConfig
;;;52       GPIO_InputConfig(AM_GPIOB,GPIO_PIN_4,ENABLE);
0000d0  2201              MOVS     r2,#1
0000d2  2110              MOVS     r1,#0x10
0000d4  4845              LDR      r0,|L1.492|
0000d6  f7fffffe          BL       GPIO_InputConfig
;;;53     	
;;;54     	GPIO_DirectionConfig(AM_GPIOB,GPIO_PIN_5,GPIO_DIR_IN);  
0000da  2200              MOVS     r2,#0
0000dc  2120              MOVS     r1,#0x20
0000de  4843              LDR      r0,|L1.492|
0000e0  f7fffffe          BL       GPIO_DirectionConfig
;;;55     	GPIO_PullResistorConfig(AM_GPIOB,GPIO_PIN_5,GPIO_PR_UP); 
0000e4  2200              MOVS     r2,#0
0000e6  2120              MOVS     r1,#0x20
0000e8  4840              LDR      r0,|L1.492|
0000ea  f7fffffe          BL       GPIO_PullResistorConfig
;;;56       GPIO_InputConfig(AM_GPIOB,GPIO_PIN_5,ENABLE);
0000ee  2201              MOVS     r2,#1
0000f0  2120              MOVS     r1,#0x20
0000f2  483e              LDR      r0,|L1.492|
0000f4  f7fffffe          BL       GPIO_InputConfig
;;;57     	
;;;58     	GPIO_DirectionConfig(AM_GPIOB,GPIO_PIN_6,GPIO_DIR_IN);  
0000f8  2200              MOVS     r2,#0
0000fa  2140              MOVS     r1,#0x40
0000fc  483b              LDR      r0,|L1.492|
0000fe  f7fffffe          BL       GPIO_DirectionConfig
;;;59     	GPIO_PullResistorConfig(AM_GPIOB,GPIO_PIN_6,GPIO_PR_UP); 
000102  2200              MOVS     r2,#0
000104  2140              MOVS     r1,#0x40
000106  4839              LDR      r0,|L1.492|
000108  f7fffffe          BL       GPIO_PullResistorConfig
;;;60       GPIO_InputConfig(AM_GPIOB,GPIO_PIN_6,ENABLE);
00010c  2201              MOVS     r2,#1
00010e  2140              MOVS     r1,#0x40
000110  4836              LDR      r0,|L1.492|
000112  f7fffffe          BL       GPIO_InputConfig
;;;61     	
;;;62     	GPIO_DirectionConfig(AM_GPIOC,GPIO_PIN_11,GPIO_DIR_IN);  
000116  2200              MOVS     r2,#0
000118  2101              MOVS     r1,#1
00011a  02c9              LSLS     r1,r1,#11
00011c  4834              LDR      r0,|L1.496|
00011e  f7fffffe          BL       GPIO_DirectionConfig
;;;63     	GPIO_PullResistorConfig(AM_GPIOC,GPIO_PIN_11,GPIO_PR_UP); 
000122  2200              MOVS     r2,#0
000124  2101              MOVS     r1,#1
000126  02c9              LSLS     r1,r1,#11
000128  4831              LDR      r0,|L1.496|
00012a  f7fffffe          BL       GPIO_PullResistorConfig
;;;64       GPIO_InputConfig(AM_GPIOC,GPIO_PIN_11,ENABLE);
00012e  2201              MOVS     r2,#1
000130  02d1              LSLS     r1,r2,#11
000132  482f              LDR      r0,|L1.496|
000134  f7fffffe          BL       GPIO_InputConfig
;;;65     
;;;66       GPIO_DirectionConfig(AM_GPIOD,GPIO_PIN_8,GPIO_DIR_OUT);  
000138  2201              MOVS     r2,#1
00013a  0211              LSLS     r1,r2,#8
00013c  482d              LDR      r0,|L1.500|
00013e  f7fffffe          BL       GPIO_DirectionConfig
;;;67     	GPIO_PullResistorConfig(AM_GPIOD,GPIO_PIN_8,GPIO_PR_UP); 
000142  2200              MOVS     r2,#0
000144  21ff              MOVS     r1,#0xff
000146  3101              ADDS     r1,#1
000148  482a              LDR      r0,|L1.500|
00014a  f7fffffe          BL       GPIO_PullResistorConfig
;;;68       GPIO_InputConfig(AM_GPIOD,GPIO_PIN_8,ENABLE);
00014e  2201              MOVS     r2,#1
000150  0211              LSLS     r1,r2,#8
000152  4828              LDR      r0,|L1.500|
000154  f7fffffe          BL       GPIO_InputConfig
;;;69     	
;;;70     	GPIO_DirectionConfig(AM_GPIOD,GPIO_PIN_4,GPIO_DIR_OUT);  
000158  2201              MOVS     r2,#1
00015a  2110              MOVS     r1,#0x10
00015c  4825              LDR      r0,|L1.500|
00015e  f7fffffe          BL       GPIO_DirectionConfig
;;;71     	GPIO_PullResistorConfig(AM_GPIOD,GPIO_PIN_4,GPIO_PR_UP); 
000162  2200              MOVS     r2,#0
000164  2110              MOVS     r1,#0x10
000166  4823              LDR      r0,|L1.500|
000168  f7fffffe          BL       GPIO_PullResistorConfig
;;;72       GPIO_InputConfig(AM_GPIOD,GPIO_PIN_4,ENABLE);
00016c  2201              MOVS     r2,#1
00016e  2110              MOVS     r1,#0x10
000170  4820              LDR      r0,|L1.500|
000172  f7fffffe          BL       GPIO_InputConfig
;;;73     }
000176  bd10              POP      {r4,pc}
;;;74     
                          ENDP

                  LED_Toggle PROC
;;;75     void LED_Toggle(LED_TypeDef Light)
000178  b510              PUSH     {r4,lr}
;;;76     {
00017a  4604              MOV      r4,r0
;;;77     	assert_param(IS_LED_TypeDef(Light));
;;;78     	if(Light==RED)
00017c  2c00              CMP      r4,#0
00017e  d10f              BNE      |L1.416|
;;;79     	{
;;;80     		if(GPIO_ReadOutBit(LED1_GPIO_PORT,LED1_PIN)==SET)
000180  21ff              MOVS     r1,#0xff
000182  3101              ADDS     r1,#1
000184  4819              LDR      r0,|L1.492|
000186  f7fffffe          BL       GPIO_ReadOutBit
00018a  2801              CMP      r0,#1
00018c  d103              BNE      |L1.406|
;;;81     			LED1(ON);
00018e  0200              LSLS     r0,r0,#8
000190  4916              LDR      r1,|L1.492|
000192  6288              STR      r0,[r1,#0x28]
000194  e028              B        |L1.488|
                  |L1.406|
;;;82     		else 
;;;83     			LED1(OFF);
000196  20ff              MOVS     r0,#0xff
000198  3001              ADDS     r0,#1
00019a  4914              LDR      r1,|L1.492|
00019c  6248              STR      r0,[r1,#0x24]
00019e  e023              B        |L1.488|
                  |L1.416|
;;;84     	}
;;;85     	else if(Light==GREEN)
0001a0  2c01              CMP      r4,#1
0001a2  d110              BNE      |L1.454|
;;;86     	{
;;;87     		if(GPIO_ReadOutBit(LED2_GPIO_PORT,LED2_PIN)==SET)
0001a4  02e1              LSLS     r1,r4,#11
0001a6  4812              LDR      r0,|L1.496|
0001a8  f7fffffe          BL       GPIO_ReadOutBit
0001ac  2801              CMP      r0,#1
0001ae  d104              BNE      |L1.442|
;;;88     			LED2(ON);
0001b0  02c1              LSLS     r1,r0,#11
0001b2  480f              LDR      r0,|L1.496|
0001b4  f7fffffe          BL       GPIO_ClearOutBits
0001b8  e016              B        |L1.488|
                  |L1.442|
;;;89     		else 
;;;90     			LED2(OFF);
0001ba  2101              MOVS     r1,#1
0001bc  02c9              LSLS     r1,r1,#11
0001be  480c              LDR      r0,|L1.496|
0001c0  f7fffffe          BL       GPIO_SetOutBits
0001c4  e010              B        |L1.488|
                  |L1.454|
;;;91     	}
;;;92     	else if(Light==BLUE)
0001c6  2c02              CMP      r4,#2
0001c8  d10e              BNE      |L1.488|
;;;93     	{
;;;94     		if(GPIO_ReadOutBit(LED3_GPIO_PORT,LED3_PIN)==SET)
0001ca  2120              MOVS     r1,#0x20
0001cc  4808              LDR      r0,|L1.496|
0001ce  f7fffffe          BL       GPIO_ReadOutBit
0001d2  2801              CMP      r0,#1
0001d4  d104              BNE      |L1.480|
;;;95     			LED3(ON);
0001d6  2120              MOVS     r1,#0x20
0001d8  4805              LDR      r0,|L1.496|
0001da  f7fffffe          BL       GPIO_ClearOutBits
0001de  e003              B        |L1.488|
                  |L1.480|
;;;96     		else 
;;;97     			LED3(OFF);
0001e0  2120              MOVS     r1,#0x20
0001e2  4803              LDR      r0,|L1.496|
0001e4  f7fffffe          BL       GPIO_SetOutBits
                  |L1.488|
;;;98     	}
;;;99     }
0001e8  bd10              POP      {r4,pc}
;;;100    
                          ENDP

0001ea  0000              DCW      0x0000
                  |L1.492|
                          DCD      0x400b2000
                  |L1.496|
                          DCD      0x400b4000
                  |L1.500|
                          DCD      0x400b6000

;*** Start embedded assembler ***

#line 1 "User\\led\\bsp_led.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_led_c_dd8e8b2c____REV16|
#line 114 "..\\inc\\core_cmInstr.h"
|__asm___9_bsp_led_c_dd8e8b2c____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_led_c_dd8e8b2c____REVSH|
#line 128
|__asm___9_bsp_led_c_dd8e8b2c____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
