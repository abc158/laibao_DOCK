; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\objects\pwrcu.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\pwrcu.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\inc -I..\driver\inc -I.\src -I.\User -I.\User\led -I.\User\usart -I.\User\timer -I.\User\ir -I.\User\2.4G -I.\User\spi0 -IF:\1708\dock\prj\RTE -I"D:\Program Files (x86)\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\Device\ARM\ARMCM0\Include" -I"D:\Program Files (x86)\Keil_v5\ARM\CMSIS\Include" -D__MICROLIB -D__UVISION_VERSION=514 -DARMCM0 -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\pwrcu.crf ..\driver\src\pwrcu.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  PWRCU_DeInit PROC
;;;31      ************************************************************************************************************/
;;;32     void PWRCU_DeInit(void)
000000  2001              MOVS     r0,#1
;;;33     {
;;;34       AM_PWRCU->BAKCR = BAKRST_SET ;
000002  4984              LDR      r1,|L1.532|
000004  6048              STR      r0,[r1,#4]
;;;35       while(AM_PWRCU->BAKCR);
000006  bf00              NOP      
                  |L1.8|
000008  4882              LDR      r0,|L1.532|
00000a  6840              LDR      r0,[r0,#4]
00000c  2800              CMP      r0,#0
00000e  d1fb              BNE      |L1.8|
;;;36       while(AM_PWRCU->BAKSR);    /* Waits until the BAKPORF be cleared by read */
000010  bf00              NOP      
                  |L1.18|
000012  4880              LDR      r0,|L1.532|
000014  6800              LDR      r0,[r0,#0]
000016  2800              CMP      r0,#0
000018  d1fb              BNE      |L1.18|
;;;37     }
00001a  4770              BX       lr
;;;38     
                          ENDP

                  PWRCU_CheckReadyAccessed PROC
;;;42      ************************************************************************************************************/
;;;43     PWRCU_Status PWRCU_CheckReadyAccessed(void)
00001c  4a7e              LDR      r2,|L1.536|
;;;44     {
;;;45       u32 wTimeOutCnt = TIME_OUT ;
;;;46     
;;;47       /* Sets the BK_ISO bit */
;;;48       AM_CKCU->LPCR = 0x1 ;
00001e  2001              MOVS     r0,#1
000020  497e              LDR      r1,|L1.540|
000022  6008              STR      r0,[r1,#0]
;;;49     
;;;50       while(--wTimeOutCnt)
000024  e016              B        |L1.84|
                  |L1.38|
;;;51       {
;;;52         if(AM_PWRCU->BAKTEST == BAKTEST_READY)
000026  487b              LDR      r0,|L1.532|
000028  6880              LDR      r0,[r0,#8]
00002a  2827              CMP      r0,#0x27
00002c  d111              BNE      |L1.82|
;;;53         {
;;;54           u32 write = ~AM_PWRCU->BAKREG[9];
00002e  487c              LDR      r0,|L1.544|
000030  6a40              LDR      r0,[r0,#0x24]
000032  43c1              MVNS     r1,r0
;;;55           u32 backup = AM_PWRCU->BAKREG[9];
000034  487a              LDR      r0,|L1.544|
000036  6a43              LDR      r3,[r0,#0x24]
;;;56           while(1)
000038  e005              B        |L1.70|
                  |L1.58|
;;;57           {
;;;58             AM_PWRCU->BAKREG[9] = write;
00003a  4879              LDR      r0,|L1.544|
00003c  6241              STR      r1,[r0,#0x24]
;;;59             if(AM_PWRCU->BAKREG[9] == write) break;
00003e  6a40              LDR      r0,[r0,#0x24]
000040  4288              CMP      r0,r1
000042  d100              BNE      |L1.70|
000044  e000              B        |L1.72|
                  |L1.70|
000046  e7f8              B        |L1.58|
                  |L1.72|
000048  bf00              NOP      
;;;60           }
;;;61           AM_PWRCU->BAKREG[9] = backup;
00004a  4875              LDR      r0,|L1.544|
00004c  6243              STR      r3,[r0,#0x24]
;;;62           return PWRCU_OK ;
00004e  2000              MOVS     r0,#0
                  |L1.80|
;;;63         }
;;;64       }
;;;65       return PWRCU_TIMEOUT ;
;;;66     }
000050  4770              BX       lr
                  |L1.82|
000052  bf00              NOP                            ;63
                  |L1.84|
000054  1e50              SUBS     r0,r2,#1              ;50
000056  0002              MOVS     r2,r0                 ;50
000058  d1e5              BNE      |L1.38|
00005a  2001              MOVS     r0,#1                 ;65
00005c  e7f8              B        |L1.80|
;;;67     
                          ENDP

                  PWRCU_GetFlagStatus PROC
;;;76      ************************************************************************************************************/
;;;77     u16 PWRCU_GetFlagStatus(void)
00005e  486d              LDR      r0,|L1.532|
;;;78     {
;;;79       return AM_PWRCU->BAKSR;
000060  6800              LDR      r0,[r0,#0]
000062  b280              UXTH     r0,r0
;;;80     }
000064  4770              BX       lr
;;;81     
                          ENDP

                  PWRCU_ReadBackupRegister PROC
;;;86      ************************************************************************************************************/
;;;87     u32 PWRCU_ReadBackupRegister(PWRCU_BAKREG_Enum BAKREGx)
000066  4601              MOV      r1,r0
;;;88     {
;;;89       return AM_PWRCU->BAKREG[BAKREGx];
000068  486d              LDR      r0,|L1.544|
00006a  008a              LSLS     r2,r1,#2
00006c  5880              LDR      r0,[r0,r2]
;;;90     }
00006e  4770              BX       lr
;;;91     
                          ENDP

                  PWRCU_WriteBackupRegister PROC
;;;97      ************************************************************************************************************/
;;;98     void PWRCU_WriteBackupRegister(PWRCU_BAKREG_Enum BAKREGx, u32 DATA)
000070  4a6b              LDR      r2,|L1.544|
;;;99     {
;;;100      AM_PWRCU->BAKREG[BAKREGx] = DATA;
000072  0083              LSLS     r3,r0,#2
000074  50d1              STR      r1,[r2,r3]
;;;101    }
000076  4770              BX       lr
;;;102    
                          ENDP

                  PWRCU_Sleep PROC
;;;110     ************************************************************************************************************/
;;;111    void PWRCU_Sleep(PWRCU_SLEEP_ENTRY_Enum SleepEntry)
000078  496a              LDR      r1,|L1.548|
;;;112    {
;;;113      /* Clear SLEEPDEEP bit of Cortex System Control Register */
;;;114      SCB->SCR &= ~(u32)SLEEPDEEP_SET;
00007a  6909              LDR      r1,[r1,#0x10]
00007c  2204              MOVS     r2,#4
00007e  4391              BICS     r1,r1,r2
000080  4a68              LDR      r2,|L1.548|
000082  6111              STR      r1,[r2,#0x10]
;;;115    
;;;116      if(SleepEntry == PWRCU_SLEEP_ENTRY_WFE)
000084  2800              CMP      r0,#0
000086  d101              BNE      |L1.140|
;;;117      {
;;;118        /* Wait for event */
;;;119        __WFE();
000088  bf20              WFE      
00008a  e000              B        |L1.142|
                  |L1.140|
;;;120      }
;;;121      else
;;;122      {
;;;123        /* Wait for interrupt */
;;;124        __WFI();
00008c  bf30              WFI      
                  |L1.142|
;;;125      }
;;;126    }
00008e  4770              BX       lr
;;;127    
                          ENDP

                  PWRCU_DeepSleep1 PROC
;;;135     ************************************************************************************************************/
;;;136    void PWRCU_DeepSleep1(PWRCU_SLEEP_ENTRY_Enum SleepEntry)
000090  4960              LDR      r1,|L1.532|
;;;137    {
;;;138      AM_PWRCU->BAKCR &= (~(1<<3));  //ldo on	
000092  6849              LDR      r1,[r1,#4]
000094  2208              MOVS     r2,#8
000096  4391              BICS     r1,r1,r2
000098  4a5e              LDR      r2,|L1.532|
00009a  6051              STR      r1,[r2,#4]
;;;139      AM_PWRCU->BAKCR &= (~(1<<7));  //dmos off
00009c  4611              MOV      r1,r2
00009e  6849              LDR      r1,[r1,#4]
0000a0  2280              MOVS     r2,#0x80
0000a2  4391              BICS     r1,r1,r2
0000a4  4a5b              LDR      r2,|L1.532|
0000a6  6051              STR      r1,[r2,#4]
;;;140    
;;;141      /* Sets SLEEPDEEP bit of Cortex System Control Register */
;;;142      SCB->SCR |= SLEEPDEEP_SET;
0000a8  495e              LDR      r1,|L1.548|
0000aa  6909              LDR      r1,[r1,#0x10]
0000ac  2204              MOVS     r2,#4
0000ae  4311              ORRS     r1,r1,r2
0000b0  4a5c              LDR      r2,|L1.548|
0000b2  6111              STR      r1,[r2,#0x10]
;;;143    
;;;144      if(SleepEntry == PWRCU_SLEEP_ENTRY_WFE)
0000b4  2800              CMP      r0,#0
0000b6  d101              BNE      |L1.188|
;;;145      {
;;;146        /* Wait for event */
;;;147        __WFE();
0000b8  bf20              WFE      
0000ba  e000              B        |L1.190|
                  |L1.188|
;;;148      }
;;;149      else
;;;150      {
;;;151        /* Wait for interrupt */
;;;152        __WFI();
0000bc  bf30              WFI      
                  |L1.190|
;;;153      }
;;;154    }
0000be  4770              BX       lr
;;;155    
                          ENDP

                  PWRCU_DeepSleep2 PROC
;;;163     ************************************************************************************************************/
;;;164    void PWRCU_DeepSleep2(PWRCU_SLEEP_ENTRY_Enum SleepEntry)
0000c0  4954              LDR      r1,|L1.532|
;;;165    {
;;;166      AM_PWRCU->BAKCR |= (1<<7);  //dmos on
0000c2  6849              LDR      r1,[r1,#4]
0000c4  2280              MOVS     r2,#0x80
0000c6  4311              ORRS     r1,r1,r2
0000c8  4a52              LDR      r2,|L1.532|
0000ca  6051              STR      r1,[r2,#4]
;;;167    
;;;168      /* Sets SLEEPDEEP bit of Cortex System Control Register */
;;;169      SCB->SCR |= SLEEPDEEP_SET;
0000cc  4955              LDR      r1,|L1.548|
0000ce  6909              LDR      r1,[r1,#0x10]
0000d0  2204              MOVS     r2,#4
0000d2  4311              ORRS     r1,r1,r2
0000d4  4a53              LDR      r2,|L1.548|
0000d6  6111              STR      r1,[r2,#0x10]
;;;170    
;;;171      if(SleepEntry == PWRCU_SLEEP_ENTRY_WFE)
0000d8  2800              CMP      r0,#0
0000da  d101              BNE      |L1.224|
;;;172      {
;;;173        /* Wait for event */
;;;174        __WFE();
0000dc  bf20              WFE      
0000de  e000              B        |L1.226|
                  |L1.224|
;;;175      }
;;;176      else
;;;177      {
;;;178        /* Wait for interrupt */
;;;179        __WFI();
0000e0  bf30              WFI      
                  |L1.226|
;;;180      }
;;;181    }
0000e2  4770              BX       lr
;;;182    
                          ENDP

                  PWRCU_PowerDown PROC
;;;186     ************************************************************************************************************/
;;;187    void PWRCU_PowerDown(void)
0000e4  484b              LDR      r0,|L1.532|
;;;188    {
;;;189      AM_PWRCU->BAKCR &= (~(1<<7));  //dmos off
0000e6  6840              LDR      r0,[r0,#4]
0000e8  2180              MOVS     r1,#0x80
0000ea  4388              BICS     r0,r0,r1
0000ec  4949              LDR      r1,|L1.532|
0000ee  6048              STR      r0,[r1,#4]
;;;190      AM_PWRCU->BAKCR |= (1<<3);  //ldo off	
0000f0  4608              MOV      r0,r1
0000f2  6840              LDR      r0,[r0,#4]
0000f4  2108              MOVS     r1,#8
0000f6  4308              ORRS     r0,r0,r1
0000f8  4946              LDR      r1,|L1.532|
0000fa  6048              STR      r0,[r1,#4]
;;;191    
;;;192      /* Sets SLEEPDEEP bit of Cortex System Control Register */
;;;193      SCB->SCR |= SLEEPDEEP_SET;
0000fc  4849              LDR      r0,|L1.548|
0000fe  6900              LDR      r0,[r0,#0x10]
000100  2104              MOVS     r1,#4
000102  4308              ORRS     r0,r0,r1
000104  4947              LDR      r1,|L1.548|
000106  6108              STR      r0,[r1,#0x10]
;;;194    
;;;195      /* Enters power-down mode. */
;;;196      __WFE();
000108  bf20              WFE      
;;;197    }
00010a  4770              BX       lr
;;;198    
                          ENDP

                  PWRCU_SetLVDS PROC
;;;208     ************************************************************************************************************/
;;;209    void PWRCU_SetLVDS(PWRCU_LVDS_Enum Level)
00010c  4941              LDR      r1,|L1.532|
;;;210    {
;;;211      AM_PWRCU->LVDCSR = (AM_PWRCU->LVDCSR & LVDS_MASK) | Level ;
00010e  6909              LDR      r1,[r1,#0x10]
000110  2203              MOVS     r2,#3
000112  0452              LSLS     r2,r2,#17
000114  4391              BICS     r1,r1,r2
000116  4301              ORRS     r1,r1,r0
000118  4a3e              LDR      r2,|L1.532|
00011a  6111              STR      r1,[r2,#0x10]
;;;212    }
00011c  4770              BX       lr
;;;213    
                          ENDP

                  PWRCU_LVDCmd PROC
;;;218     ************************************************************************************************************/
;;;219    void PWRCU_LVDCmd(ControlStatus NewState)
00011e  493d              LDR      r1,|L1.532|
;;;220    {
;;;221      AM_PWRCU->LVDCSR = (AM_PWRCU->LVDCSR & (~(1<<16))) | (NewState<<16);
000120  6909              LDR      r1,[r1,#0x10]
000122  2201              MOVS     r2,#1
000124  0412              LSLS     r2,r2,#16
000126  4391              BICS     r1,r1,r2
000128  0402              LSLS     r2,r0,#16
00012a  4311              ORRS     r1,r1,r2
00012c  4a39              LDR      r2,|L1.532|
00012e  6111              STR      r1,[r2,#0x10]
;;;222    }
000130  4770              BX       lr
;;;223    
                          ENDP

                  PWRCU_BODCmd PROC
;;;228     ************************************************************************************************************/
;;;229    void PWRCU_BODCmd(ControlStatus NewState)
000132  4938              LDR      r1,|L1.532|
;;;230    {
;;;231      AM_PWRCU->LVDCSR = (AM_PWRCU->LVDCSR & (~(1<<0))) | (NewState<<0);
000134  6909              LDR      r1,[r1,#0x10]
000136  0849              LSRS     r1,r1,#1
000138  0049              LSLS     r1,r1,#1
00013a  4301              ORRS     r1,r1,r0
00013c  4a35              LDR      r2,|L1.532|
00013e  6111              STR      r1,[r2,#0x10]
;;;232    }
000140  4770              BX       lr
;;;233    
                          ENDP

                  PWRCU_BODRISConfig PROC
;;;241     ************************************************************************************************************/
;;;242    void PWRCU_BODRISConfig(PWRCU_BODRIS_Enum Selection)
000142  4934              LDR      r1,|L1.532|
;;;243    {
;;;244      AM_PWRCU->LVDCSR = (AM_PWRCU->LVDCSR & (~(1<<1))) | (Selection<<1);
000144  6909              LDR      r1,[r1,#0x10]
000146  2202              MOVS     r2,#2
000148  4391              BICS     r1,r1,r2
00014a  0042              LSLS     r2,r0,#1
00014c  4311              ORRS     r1,r1,r2
00014e  4a31              LDR      r2,|L1.532|
000150  6111              STR      r1,[r2,#0x10]
;;;245    }
000152  4770              BX       lr
;;;246    
                          ENDP

                  PWRCU_GetLVDFlagStatus PROC
;;;250     ************************************************************************************************************/
;;;251    FlagStatus PWRCU_GetLVDFlagStatus(void)
000154  482f              LDR      r0,|L1.532|
;;;252    {
;;;253    	if( AM_PWRCU->LVDCSR & (1<<19) )
000156  6900              LDR      r0,[r0,#0x10]
000158  2101              MOVS     r1,#1
00015a  04c9              LSLS     r1,r1,#19
00015c  4008              ANDS     r0,r0,r1
00015e  2800              CMP      r0,#0
000160  d001              BEQ      |L1.358|
;;;254    		return SET;
000162  2001              MOVS     r0,#1
                  |L1.356|
;;;255    	else
;;;256    		return RESET;
;;;257    }
000164  4770              BX       lr
                  |L1.358|
000166  2000              MOVS     r0,#0                 ;256
000168  e7fc              B        |L1.356|
;;;258    
                          ENDP

                  PWRCU_GetBODFlagStatus PROC
;;;262     ************************************************************************************************************/
;;;263    FlagStatus PWRCU_GetBODFlagStatus(void)
00016a  482a              LDR      r0,|L1.532|
;;;264    {
;;;265    	if( AM_PWRCU->LVDCSR & (1<<3) )
00016c  6900              LDR      r0,[r0,#0x10]
00016e  2108              MOVS     r1,#8
000170  4008              ANDS     r0,r0,r1
000172  2800              CMP      r0,#0
000174  d001              BEQ      |L1.378|
;;;266    		return SET;
000176  2001              MOVS     r0,#1
                  |L1.376|
;;;267    	else
;;;268    		return RESET;
;;;269    }
000178  4770              BX       lr
                  |L1.378|
00017a  2000              MOVS     r0,#0                 ;268
00017c  e7fc              B        |L1.376|
;;;270    
                          ENDP

                  PWRCU_GetDMOSStatus PROC
;;;277     ************************************************************************************************************/
;;;278    PWRCU_DMOSStatus PWRCU_GetDMOSStatus(void)
00017e  4825              LDR      r0,|L1.532|
;;;279    {
;;;280      u32 wDmosStatus = AM_PWRCU->BAKCR & 0x8080 ;
000180  6840              LDR      r0,[r0,#4]
000182  4a29              LDR      r2,|L1.552|
000184  4010              ANDS     r0,r0,r2
000186  4601              MOV      r1,r0
;;;281    
;;;282      if(wDmosStatus == 0x0 )
000188  2900              CMP      r1,#0
00018a  d101              BNE      |L1.400|
;;;283      {
;;;284        return PWRCU_DMOS_STS_OFF;
00018c  2001              MOVS     r0,#1
                  |L1.398|
;;;285      }
;;;286      else if(wDmosStatus == 0x8080)
;;;287      {
;;;288        return PWRCU_DMOS_STS_ON;
;;;289      }
;;;290      else
;;;291      {
;;;292        return PWRCU_DMOS_STS_OFF_BY_BODRESET;
;;;293      }
;;;294    }
00018e  4770              BX       lr
                  |L1.400|
000190  4825              LDR      r0,|L1.552|
000192  4281              CMP      r1,r0                 ;286
000194  d101              BNE      |L1.410|
000196  2000              MOVS     r0,#0                 ;288
000198  e7f9              B        |L1.398|
                  |L1.410|
00019a  2002              MOVS     r0,#2                 ;292
00019c  e7f7              B        |L1.398|
;;;295    
                          ENDP

                  PWRCU_DMOSCmd PROC
;;;300     ************************************************************************************************************/
;;;301    void PWRCU_DMOSCmd(ControlStatus NewState)
00019e  491d              LDR      r1,|L1.532|
;;;302    {
;;;303      AM_PWRCU->BAKCR = (AM_PWRCU->BAKCR & (~(1<<7))) | (NewState<<7);
0001a0  6849              LDR      r1,[r1,#4]
0001a2  2280              MOVS     r2,#0x80
0001a4  4391              BICS     r1,r1,r2
0001a6  01c2              LSLS     r2,r0,#7
0001a8  4311              ORRS     r1,r1,r2
0001aa  4a1a              LDR      r2,|L1.532|
0001ac  6051              STR      r1,[r2,#4]
;;;304    }
0001ae  4770              BX       lr
;;;305    
                          ENDP

                  PWRCU_V18RDYSourceConfig PROC
;;;312     ************************************************************************************************************/
;;;313    void PWRCU_V18RDYSourceConfig(PWRCU_V18RDYSC_Enum Sel)
0001b0  4918              LDR      r1,|L1.532|
;;;314    {
;;;315      AM_PWRCU->BAKCR = (AM_PWRCU->BAKCR & (~(1<<12))) | (Sel<<12);
0001b2  6849              LDR      r1,[r1,#4]
0001b4  2201              MOVS     r2,#1
0001b6  0312              LSLS     r2,r2,#12
0001b8  4391              BICS     r1,r1,r2
0001ba  0302              LSLS     r2,r0,#12
0001bc  4311              ORRS     r1,r1,r2
0001be  4a15              LDR      r2,|L1.532|
0001c0  6051              STR      r1,[r2,#4]
;;;316    }
0001c2  4770              BX       lr
;;;317    
                          ENDP

                  PWRCU_LVDIntWakeupConfig PROC
;;;322     ************************************************************************************************************/
;;;323    void PWRCU_LVDIntWakeupConfig(ControlStatus NewState)
0001c4  4913              LDR      r1,|L1.532|
;;;324    {
;;;325      AM_PWRCU->LVDCSR = (AM_PWRCU->LVDCSR & (~(1<<20))) | (NewState<<20);
0001c6  6909              LDR      r1,[r1,#0x10]
0001c8  2201              MOVS     r2,#1
0001ca  0512              LSLS     r2,r2,#20
0001cc  4391              BICS     r1,r1,r2
0001ce  0502              LSLS     r2,r0,#20
0001d0  4311              ORRS     r1,r1,r2
0001d2  4a10              LDR      r2,|L1.532|
0001d4  6111              STR      r1,[r2,#0x10]
;;;326    }
0001d6  4770              BX       lr
;;;327    
                          ENDP

                  PWRCU_LVDEventWakeupConfig PROC
;;;332     ************************************************************************************************************/
;;;333    void PWRCU_LVDEventWakeupConfig(ControlStatus NewState)
0001d8  490e              LDR      r1,|L1.532|
;;;334    {
;;;335      AM_PWRCU->LVDCSR = (AM_PWRCU->LVDCSR & (~(1<<16))) | (NewState<<16);
0001da  6909              LDR      r1,[r1,#0x10]
0001dc  2201              MOVS     r2,#1
0001de  0412              LSLS     r2,r2,#16
0001e0  4391              BICS     r1,r1,r2
0001e2  0402              LSLS     r2,r0,#16
0001e4  4311              ORRS     r1,r1,r2
0001e6  4a0b              LDR      r2,|L1.532|
0001e8  6111              STR      r1,[r2,#0x10]
;;;336    }
0001ea  4770              BX       lr
;;;337    
                          ENDP

                  PWRCU_WakeupPinCmd PROC
;;;342     ************************************************************************************************************/
;;;343    void PWRCU_WakeupPinCmd(ControlStatus NewState)
0001ec  4909              LDR      r1,|L1.532|
;;;344    {
;;;345      AM_PWRCU->BAKCR = (AM_PWRCU->BAKCR & (~(1<<8))) | (NewState<<8);
0001ee  6849              LDR      r1,[r1,#4]
0001f0  22ff              MOVS     r2,#0xff
0001f2  3201              ADDS     r2,#1
0001f4  4391              BICS     r1,r1,r2
0001f6  0202              LSLS     r2,r0,#8
0001f8  4311              ORRS     r1,r1,r2
0001fa  4a06              LDR      r2,|L1.532|
0001fc  6051              STR      r1,[r2,#4]
;;;346    }
0001fe  4770              BX       lr
;;;347    
                          ENDP

                  PWRCU_WakeupPinIntConfig PROC
;;;352     ************************************************************************************************************/
;;;353    void PWRCU_WakeupPinIntConfig(ControlStatus NewState)
000200  4904              LDR      r1,|L1.532|
;;;354    {
;;;355      AM_PWRCU->BAKCR = (AM_PWRCU->BAKCR & (~(1<<9))) | (NewState<<9);
000202  6849              LDR      r1,[r1,#4]
000204  2201              MOVS     r2,#1
000206  0252              LSLS     r2,r2,#9
000208  4391              BICS     r1,r1,r2
00020a  0242              LSLS     r2,r0,#9
00020c  4311              ORRS     r1,r1,r2
00020e  4a01              LDR      r2,|L1.532|
000210  6051              STR      r1,[r2,#4]
;;;356    }
000212  4770              BX       lr
;;;357    
                          ENDP

                  |L1.532|
                          DCD      0x4006a100
                  |L1.536|
                          DCD      0x02255100
                  |L1.540|
                          DCD      0x40088300
                  |L1.544|
                          DCD      0x4006a200
                  |L1.548|
                          DCD      0xe000ed00
                  |L1.552|
                          DCD      0x00008080

;*** Start embedded assembler ***

#line 1 "..\\driver\\src\\pwrcu.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___7_pwrcu_c_06977d9e____REV16|
#line 114 "..\\inc\\core_cmInstr.h"
|__asm___7_pwrcu_c_06977d9e____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___7_pwrcu_c_06977d9e____REVSH|
#line 128
|__asm___7_pwrcu_c_06977d9e____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
