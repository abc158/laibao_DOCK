; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\objects\rtc.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\rtc.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\inc -I..\driver\inc -I.\src -I.\User -I.\User\led -I.\User\usart -I.\User\timer -I.\User\ir -I.\User\2.4G -I.\User\spi0 -IF:\1708\dock\prj\RTE -I"D:\Program Files (x86)\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\Device\ARM\ARMCM0\Include" -I"D:\Program Files (x86)\Keil_v5\ARM\CMSIS\Include" -D__MICROLIB -D__UVISION_VERSION=514 -DARMCM0 -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\rtc.crf ..\driver\src\rtc.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  RTC_DeInit PROC
;;;40      ************************************************************************************************************/
;;;41     void RTC_DeInit(void)
000000  b508              PUSH     {r3,lr}
;;;42     {
;;;43       vu32 tmp = 0;
000002  2000              MOVS     r0,#0
000004  9000              STR      r0,[sp,#0]
;;;44     
;;;45       AM_RTC->CR = 0x00000004;
000006  2004              MOVS     r0,#4
000008  495e              LDR      r1,|L1.388|
00000a  6088              STR      r0,[r1,#8]
;;;46       AM_RTC->CMP = 0x0;
00000c  2000              MOVS     r0,#0
00000e  6048              STR      r0,[r1,#4]
;;;47       AM_RTC->IWEN = 0x0;
000010  6108              STR      r0,[r1,#0x10]
;;;48       AM_RTC->CR |= 0x00000005;
000012  4608              MOV      r0,r1
000014  6880              LDR      r0,[r0,#8]
000016  2105              MOVS     r1,#5
000018  4308              ORRS     r0,r0,r1
00001a  495a              LDR      r1,|L1.388|
00001c  6088              STR      r0,[r1,#8]
;;;49       while(AM_RTC->CNT);
00001e  bf00              NOP      
                  |L1.32|
000020  4858              LDR      r0,|L1.388|
000022  6800              LDR      r0,[r0,#0]
000024  2800              CMP      r0,#0
000026  d1fb              BNE      |L1.32|
;;;50       AM_RTC->CR = 0x00000F04;
000028  4857              LDR      r0,|L1.392|
00002a  4956              LDR      r1,|L1.388|
00002c  6088              STR      r0,[r1,#8]
;;;51       tmp = AM_RTC->SR;
00002e  4608              MOV      r0,r1
000030  68c0              LDR      r0,[r0,#0xc]
000032  9000              STR      r0,[sp,#0]
;;;52     }
000034  bd08              POP      {r3,pc}
;;;53     
                          ENDP

                  RTC_ClockSourceConfig PROC
;;;60      ************************************************************************************************************/
;;;61     void RTC_ClockSourceConfig(RTC_SRC_Enum Source)
000036  4953              LDR      r1,|L1.388|
;;;62     {
;;;63       AM_RTC->CR = (AM_RTC->CR & (~(1<<1))) | (Source<<1);
000038  6889              LDR      r1,[r1,#8]
00003a  2202              MOVS     r2,#2
00003c  4391              BICS     r1,r1,r2
00003e  0042              LSLS     r2,r0,#1
000040  4311              ORRS     r1,r1,r2
000042  4a50              LDR      r2,|L1.388|
000044  6091              STR      r1,[r2,#8]
;;;64     }
000046  4770              BX       lr
;;;65     
                          ENDP

                  RTC_LSICmd PROC
;;;70      ************************************************************************************************************/
;;;71     void RTC_LSICmd(ControlStatus NewState)
000048  2800              CMP      r0,#0
;;;72     {
;;;73       if(NewState == DISABLE)
00004a  d106              BNE      |L1.90|
;;;74       {
;;;75         AM_RTC->CR &= (~(1<<2));
00004c  494d              LDR      r1,|L1.388|
00004e  6889              LDR      r1,[r1,#8]
000050  2204              MOVS     r2,#4
000052  4391              BICS     r1,r1,r2
000054  4a4b              LDR      r2,|L1.388|
000056  6091              STR      r1,[r2,#8]
000058  e00c              B        |L1.116|
                  |L1.90|
;;;76       }
;;;77       else
;;;78       {
;;;79         AM_RTC->CR |= (1<<2);
00005a  494a              LDR      r1,|L1.388|
00005c  6889              LDR      r1,[r1,#8]
00005e  2204              MOVS     r2,#4
000060  4311              ORRS     r1,r1,r2
000062  4a48              LDR      r2,|L1.388|
000064  6091              STR      r1,[r2,#8]
;;;80         while((AM_CKCU->GCSR & 0x20) == 0);
000066  bf00              NOP      
                  |L1.104|
000068  4948              LDR      r1,|L1.396|
00006a  6889              LDR      r1,[r1,#8]
00006c  2220              MOVS     r2,#0x20
00006e  4011              ANDS     r1,r1,r2
000070  2900              CMP      r1,#0
000072  d0f9              BEQ      |L1.104|
                  |L1.116|
;;;81       }
;;;82     }
000074  4770              BX       lr
;;;83     
                          ENDP

                  RTC_LSECmd PROC
;;;88      ************************************************************************************************************/
;;;89     void RTC_LSECmd(ControlStatus NewState)
000076  2800              CMP      r0,#0
;;;90     {
;;;91       if(NewState == DISABLE)
000078  d106              BNE      |L1.136|
;;;92       {
;;;93         AM_RTC->CR &= (~(1<<3));
00007a  4942              LDR      r1,|L1.388|
00007c  6889              LDR      r1,[r1,#8]
00007e  2208              MOVS     r2,#8
000080  4391              BICS     r1,r1,r2
000082  4a40              LDR      r2,|L1.388|
000084  6091              STR      r1,[r2,#8]
000086  e00c              B        |L1.162|
                  |L1.136|
;;;94       }
;;;95       else
;;;96       {
;;;97         AM_RTC->CR |= (1<<3);
000088  493e              LDR      r1,|L1.388|
00008a  6889              LDR      r1,[r1,#8]
00008c  2208              MOVS     r2,#8
00008e  4311              ORRS     r1,r1,r2
000090  4a3c              LDR      r2,|L1.388|
000092  6091              STR      r1,[r2,#8]
;;;98         while((AM_CKCU->GCSR & 0x10) == 0);
000094  bf00              NOP      
                  |L1.150|
000096  493d              LDR      r1,|L1.396|
000098  6889              LDR      r1,[r1,#8]
00009a  2210              MOVS     r2,#0x10
00009c  4011              ANDS     r1,r1,r2
00009e  2900              CMP      r1,#0
0000a0  d0f9              BEQ      |L1.150|
                  |L1.162|
;;;99       }
;;;100    }
0000a2  4770              BX       lr
;;;101    
                          ENDP

                  RTC_CMPCLRCmd PROC
;;;106     ************************************************************************************************************/
;;;107    void RTC_CMPCLRCmd(ControlStatus NewState)
0000a4  4937              LDR      r1,|L1.388|
;;;108    {
;;;109      AM_RTC->CR = (AM_RTC->CR & (~(1<<4))) | (NewState<<4) ;
0000a6  6889              LDR      r1,[r1,#8]
0000a8  2210              MOVS     r2,#0x10
0000aa  4391              BICS     r1,r1,r2
0000ac  0102              LSLS     r2,r0,#4
0000ae  4311              ORRS     r1,r1,r2
0000b0  4a34              LDR      r2,|L1.388|
0000b2  6091              STR      r1,[r2,#8]
;;;110    }
0000b4  4770              BX       lr
;;;111    
                          ENDP

                  RTC_SetPrescaler PROC
;;;133     ************************************************************************************************************/
;;;134    void RTC_SetPrescaler(RTC_RPRE_Enum Psc)
0000b6  4933              LDR      r1,|L1.388|
;;;135    {
;;;136      AM_RTC->CR = (AM_RTC->CR & RPRE_MASK) | Psc ;
0000b8  6889              LDR      r1,[r1,#8]
0000ba  4a35              LDR      r2,|L1.400|
0000bc  4011              ANDS     r1,r1,r2
0000be  4301              ORRS     r1,r1,r0
0000c0  4a30              LDR      r2,|L1.388|
0000c2  6091              STR      r1,[r2,#8]
;;;137    }
0000c4  4770              BX       lr
;;;138    
                          ENDP

                  RTC_GetPrescaler PROC
;;;142     ************************************************************************************************************/
;;;143    u16 RTC_GetPrescaler(void)
0000c6  482f              LDR      r0,|L1.388|
;;;144    {
;;;145      u32 prescaler ;
;;;146    
;;;147      prescaler = AM_RTC->CR >> 8 ;
0000c8  6880              LDR      r0,[r0,#8]
0000ca  0a01              LSRS     r1,r0,#8
;;;148    
;;;149      return ((u16)0x1 << prescaler) ;
0000cc  2001              MOVS     r0,#1
0000ce  4088              LSLS     r0,r0,r1
0000d0  b280              UXTH     r0,r0
;;;150    }
0000d2  4770              BX       lr
;;;151    
                          ENDP

                  RTC_Cmd PROC
;;;156     ************************************************************************************************************/
;;;157    void RTC_Cmd(ControlStatus NewState)
0000d4  492b              LDR      r1,|L1.388|
;;;158    {
;;;159      AM_RTC->CR = (AM_RTC->CR & (~(1<<0))) | (NewState<<0) ;
0000d6  6889              LDR      r1,[r1,#8]
0000d8  0849              LSRS     r1,r1,#1
0000da  0049              LSLS     r1,r1,#1
0000dc  4301              ORRS     r1,r1,r0
0000de  4a29              LDR      r2,|L1.388|
0000e0  6091              STR      r1,[r2,#8]
;;;160    }
0000e2  4770              BX       lr
;;;161    
                          ENDP

                  RTC_GetCounter PROC
;;;165     ************************************************************************************************************/
;;;166    u32 RTC_GetCounter(void)
0000e4  4827              LDR      r0,|L1.388|
;;;167    {
;;;168      return AM_RTC->CNT ;
0000e6  6800              LDR      r0,[r0,#0]
;;;169    }
0000e8  4770              BX       lr
;;;170    
                          ENDP

                  RTC_SetCompare PROC
;;;175     ************************************************************************************************************/
;;;176    void RTC_SetCompare(u32 Compare)
0000ea  4926              LDR      r1,|L1.388|
;;;177    {
;;;178      AM_RTC->CMP = Compare ;
0000ec  6048              STR      r0,[r1,#4]
;;;179    }
0000ee  4770              BX       lr
;;;180    
                          ENDP

                  RTC_GetCompare PROC
;;;184     ************************************************************************************************************/
;;;185    u32 RTC_GetCompare(void)
0000f0  4824              LDR      r0,|L1.388|
;;;186    {
;;;187      return AM_RTC->CMP ;
0000f2  6840              LDR      r0,[r0,#4]
;;;188    }
0000f4  4770              BX       lr
;;;189    
                          ENDP

                  RTC_WakeupConfig PROC
;;;201     ************************************************************************************************************/
;;;202     void RTC_WakeupConfig(u32 RTC_WAKEUP, ControlStatus NewState)
0000f6  2900              CMP      r1,#0
;;;203    {
;;;204      if(NewState != DISABLE)
0000f8  d005              BEQ      |L1.262|
;;;205      {
;;;206        AM_RTC->IWEN |= RTC_WAKEUP ;
0000fa  4a22              LDR      r2,|L1.388|
0000fc  6912              LDR      r2,[r2,#0x10]
0000fe  4302              ORRS     r2,r2,r0
000100  4b20              LDR      r3,|L1.388|
000102  611a              STR      r2,[r3,#0x10]
000104  e004              B        |L1.272|
                  |L1.262|
;;;207      }
;;;208      else
;;;209      {
;;;210        AM_RTC->IWEN &= ~RTC_WAKEUP ;
000106  4a1f              LDR      r2,|L1.388|
000108  6912              LDR      r2,[r2,#0x10]
00010a  4382              BICS     r2,r2,r0
00010c  4b1d              LDR      r3,|L1.388|
00010e  611a              STR      r2,[r3,#0x10]
                  |L1.272|
;;;211      }
;;;212    }
000110  4770              BX       lr
;;;213    
                          ENDP

                  RTC_IntConfig PROC
;;;225     ************************************************************************************************************/
;;;226    void RTC_IntConfig(u32 RTC_INT, ControlStatus NewState)
000112  2900              CMP      r1,#0
;;;227    {
;;;228      if(NewState != DISABLE)
000114  d005              BEQ      |L1.290|
;;;229      {
;;;230        AM_RTC->IWEN |= RTC_INT ;
000116  4a1b              LDR      r2,|L1.388|
000118  6912              LDR      r2,[r2,#0x10]
00011a  4302              ORRS     r2,r2,r0
00011c  4b19              LDR      r3,|L1.388|
00011e  611a              STR      r2,[r3,#0x10]
000120  e004              B        |L1.300|
                  |L1.290|
;;;231      }
;;;232      else
;;;233      {
;;;234        AM_RTC->IWEN &= ~RTC_INT ;
000122  4a18              LDR      r2,|L1.388|
000124  6912              LDR      r2,[r2,#0x10]
000126  4382              BICS     r2,r2,r0
000128  4b16              LDR      r3,|L1.388|
00012a  611a              STR      r2,[r3,#0x10]
                  |L1.300|
;;;235      }
;;;236    }
00012c  4770              BX       lr
;;;237    
                          ENDP

                  RTC_GetFlagStatus PROC
;;;248     ************************************************************************************************************/
;;;249    u8 RTC_GetFlagStatus(void)
00012e  4815              LDR      r0,|L1.388|
;;;250    {
;;;251      return (u8)AM_RTC->SR ;
000130  68c0              LDR      r0,[r0,#0xc]
000132  b2c0              UXTB     r0,r0
;;;252    }
000134  4770              BX       lr
;;;253    
                          ENDP

                  RTC_OutConfig PROC
;;;266     ************************************************************************************************************/
;;;267    void RTC_OutConfig(RTC_ROWM_Enum WMode, RTC_ROES_Enum EventSel, RTC_ROAP_Enum Pol)
000136  b510              PUSH     {r4,lr}
;;;268    {
;;;269    	AM_RTC->CR &= (~(1<<16));  //rtcout disable
000138  4b12              LDR      r3,|L1.388|
00013a  689b              LDR      r3,[r3,#8]
00013c  2401              MOVS     r4,#1
00013e  0424              LSLS     r4,r4,#16
000140  43a3              BICS     r3,r3,r4
000142  4c10              LDR      r4,|L1.388|
000144  60a3              STR      r3,[r4,#8]
;;;270      AM_RTC->CR = (AM_RTC->CR & (~((1<<17)|(1<<18)|(1<<19)))) | WMode | EventSel | Pol;
000146  4623              MOV      r3,r4
000148  689b              LDR      r3,[r3,#8]
00014a  2407              MOVS     r4,#7
00014c  0464              LSLS     r4,r4,#17
00014e  43a3              BICS     r3,r3,r4
000150  4303              ORRS     r3,r3,r0
000152  430b              ORRS     r3,r3,r1
000154  4313              ORRS     r3,r3,r2
000156  4c0b              LDR      r4,|L1.388|
000158  60a3              STR      r3,[r4,#8]
;;;271    }
00015a  bd10              POP      {r4,pc}
;;;272    
                          ENDP

                  RTC_OutCmd PROC
;;;277     ************************************************************************************************************/
;;;278    void RTC_OutCmd(ControlStatus NewState)
00015c  4909              LDR      r1,|L1.388|
;;;279    {
;;;280    	AM_RTC->CR |= (1<<16);  //rtcout enable
00015e  6889              LDR      r1,[r1,#8]
000160  2201              MOVS     r2,#1
000162  0412              LSLS     r2,r2,#16
000164  4311              ORRS     r1,r1,r2
000166  4a07              LDR      r2,|L1.388|
000168  6091              STR      r1,[r2,#8]
;;;281    }
00016a  4770              BX       lr
;;;282    
                          ENDP

                  RTC_GetOutStatus PROC
;;;287     ************************************************************************************************************/
;;;288    FlagStatus RTC_GetOutStatus(void)
00016c  4805              LDR      r0,|L1.388|
;;;289    {
;;;290    	if(AM_RTC->CR & (1<<20))
00016e  6880              LDR      r0,[r0,#8]
000170  2101              MOVS     r1,#1
000172  0509              LSLS     r1,r1,#20
000174  4008              ANDS     r0,r0,r1
000176  2800              CMP      r0,#0
000178  d001              BEQ      |L1.382|
;;;291    		return SET;
00017a  2001              MOVS     r0,#1
                  |L1.380|
;;;292    	else
;;;293    		return RESET;
;;;294    }
00017c  4770              BX       lr
                  |L1.382|
00017e  2000              MOVS     r0,#0                 ;293
000180  e7fc              B        |L1.380|
;;;295    
                          ENDP

000182  0000              DCW      0x0000
                  |L1.388|
                          DCD      0x4006a000
                  |L1.392|
                          DCD      0x00000f04
                  |L1.396|
                          DCD      0x40088000
                  |L1.400|
                          DCD      0x0000f0ff

;*** Start embedded assembler ***

#line 1 "..\\driver\\src\\rtc.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___5_rtc_c_81435638____REV16|
#line 114 "..\\inc\\core_cmInstr.h"
|__asm___5_rtc_c_81435638____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___5_rtc_c_81435638____REVSH|
#line 128
|__asm___5_rtc_c_81435638____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
