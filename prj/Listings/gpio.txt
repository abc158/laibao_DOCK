; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\objects\gpio.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\gpio.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I..\inc -I..\driver\inc -I.\src -I.\User -I.\User\led -I.\User\usart -I.\User\timer -I.\User\ir -I.\User\2.4G -I.\User\spi0 -IF:\1708\dock\prj\RTE -I"D:\Program Files (x86)\Keil_v5\ARM\PACK\ARM\CMSIS\4.2.0\Device\ARM\ARMCM0\Include" -I"D:\Program Files (x86)\Keil_v5\ARM\CMSIS\Include" -D__MICROLIB -D__UVISION_VERSION=514 -DARMCM0 -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\gpio.crf ..\driver\src\gpio.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GPIO_DeInit PROC
;;;19      ************************************************************************************************************/
;;;20     void GPIO_DeInit(AM_GPIO_TypeDef* GPIOx)
000000  b510              PUSH     {r4,lr}
;;;21     {
000002  4604              MOV      r4,r0
;;;22       if(GPIOx == AM_GPIOA)
000004  48fe              LDR      r0,|L1.1024|
000006  4284              CMP      r4,r0
000008  d104              BNE      |L1.20|
;;;23       {
;;;24         RSTCU_AHBPeripReset(RSTCU_AHBRST_PA, ENABLE);
00000a  2101              MOVS     r1,#1
00000c  0408              LSLS     r0,r1,#16
00000e  f7fffffe          BL       RSTCU_AHBPeripReset
000012  e01b              B        |L1.76|
                  |L1.20|
;;;25       }
;;;26       else if(GPIOx == AM_GPIOB)
000014  48fb              LDR      r0,|L1.1028|
000016  4284              CMP      r4,r0
000018  d104              BNE      |L1.36|
;;;27       {
;;;28         RSTCU_AHBPeripReset(RSTCU_AHBRST_PB, ENABLE);
00001a  2101              MOVS     r1,#1
00001c  0448              LSLS     r0,r1,#17
00001e  f7fffffe          BL       RSTCU_AHBPeripReset
000022  e013              B        |L1.76|
                  |L1.36|
;;;29       }
;;;30       else if(GPIOx == AM_GPIOC)
000024  48f8              LDR      r0,|L1.1032|
000026  4284              CMP      r4,r0
000028  d104              BNE      |L1.52|
;;;31       {
;;;32         RSTCU_AHBPeripReset(RSTCU_AHBRST_PC, ENABLE);
00002a  2101              MOVS     r1,#1
00002c  0488              LSLS     r0,r1,#18
00002e  f7fffffe          BL       RSTCU_AHBPeripReset
000032  e00b              B        |L1.76|
                  |L1.52|
;;;33       }
;;;34       else if(GPIOx == AM_GPIOD)
000034  48f5              LDR      r0,|L1.1036|
000036  4284              CMP      r4,r0
000038  d104              BNE      |L1.68|
;;;35       {
;;;36         RSTCU_AHBPeripReset(RSTCU_AHBRST_PD, ENABLE);
00003a  2101              MOVS     r1,#1
00003c  04c8              LSLS     r0,r1,#19
00003e  f7fffffe          BL       RSTCU_AHBPeripReset
000042  e003              B        |L1.76|
                  |L1.68|
;;;37       }
;;;38       else
;;;39       {
;;;40         RSTCU_AHBPeripReset(RSTCU_AHBRST_PE, ENABLE);
000044  2101              MOVS     r1,#1
000046  0508              LSLS     r0,r1,#20
000048  f7fffffe          BL       RSTCU_AHBPeripReset
                  |L1.76|
;;;41       }
;;;42     }
00004c  bd10              POP      {r4,pc}
;;;43     
                          ENDP

                  GPIO_DirectionConfig PROC
;;;53      ************************************************************************************************************/
;;;54     void GPIO_DirectionConfig(AM_GPIO_TypeDef* GPIOx, u16 GPIO_PIN, GPIO_DIR_Enum Direction)
00004e  2a00              CMP      r2,#0
;;;55     {
;;;56       if(Direction != GPIO_DIR_IN)
000050  d003              BEQ      |L1.90|
;;;57         GPIOx->DIRCR |= GPIO_PIN ;
000052  6803              LDR      r3,[r0,#0]
000054  430b              ORRS     r3,r3,r1
000056  6003              STR      r3,[r0,#0]
000058  e002              B        |L1.96|
                  |L1.90|
;;;58       else
;;;59         GPIOx->DIRCR &= ~GPIO_PIN ;
00005a  6803              LDR      r3,[r0,#0]
00005c  438b              BICS     r3,r3,r1
00005e  6003              STR      r3,[r0,#0]
                  |L1.96|
;;;60     }
000060  4770              BX       lr
;;;61     
                          ENDP

                  GPIO_PullResistorConfig PROC
;;;72      ************************************************************************************************************/
;;;73     void GPIO_PullResistorConfig(AM_GPIO_TypeDef* GPIOx, u16 GPIO_PIN, GPIO_PR_Enum PR)
000062  2a00              CMP      r2,#0
;;;74     {
;;;75       if(PR == GPIO_PR_UP)
000064  d106              BNE      |L1.116|
;;;76       {
;;;77         GPIOx->PUR |= GPIO_PIN ;
000066  6883              LDR      r3,[r0,#8]
000068  430b              ORRS     r3,r3,r1
00006a  6083              STR      r3,[r0,#8]
;;;78         GPIOx->PDR &= ~GPIO_PIN ;
00006c  68c3              LDR      r3,[r0,#0xc]
00006e  438b              BICS     r3,r3,r1
000070  60c3              STR      r3,[r0,#0xc]
000072  e00e              B        |L1.146|
                  |L1.116|
;;;79       }
;;;80       else if(PR == GPIO_PR_DOWN)
000074  2a01              CMP      r2,#1
000076  d106              BNE      |L1.134|
;;;81       {
;;;82         GPIOx->PDR |= GPIO_PIN ;
000078  68c3              LDR      r3,[r0,#0xc]
00007a  430b              ORRS     r3,r3,r1
00007c  60c3              STR      r3,[r0,#0xc]
;;;83         GPIOx->PUR &= ~GPIO_PIN ;
00007e  6883              LDR      r3,[r0,#8]
000080  438b              BICS     r3,r3,r1
000082  6083              STR      r3,[r0,#8]
000084  e005              B        |L1.146|
                  |L1.134|
;;;84       }
;;;85       else
;;;86       {
;;;87         GPIOx->PUR &= ~GPIO_PIN ;
000086  6883              LDR      r3,[r0,#8]
000088  438b              BICS     r3,r3,r1
00008a  6083              STR      r3,[r0,#8]
;;;88         GPIOx->PDR &= ~GPIO_PIN ;
00008c  68c3              LDR      r3,[r0,#0xc]
00008e  438b              BICS     r3,r3,r1
000090  60c3              STR      r3,[r0,#0xc]
                  |L1.146|
;;;89       }
;;;90     }
000092  4770              BX       lr
;;;91     
                          ENDP

                  GPIO_InputConfig PROC
;;;99      ************************************************************************************************************/
;;;100    void GPIO_InputConfig(AM_GPIO_TypeDef* GPIOx, u16 GPIO_PIN, ControlStatus Cmd)
000094  2a00              CMP      r2,#0
;;;101    {
;;;102      if(Cmd != DISABLE)
000096  d003              BEQ      |L1.160|
;;;103        GPIOx->INER |= GPIO_PIN ;
000098  6843              LDR      r3,[r0,#4]
00009a  430b              ORRS     r3,r3,r1
00009c  6043              STR      r3,[r0,#4]
00009e  e002              B        |L1.166|
                  |L1.160|
;;;104      else
;;;105        GPIOx->INER &= ~GPIO_PIN ;
0000a0  6843              LDR      r3,[r0,#4]
0000a2  438b              BICS     r3,r3,r1
0000a4  6043              STR      r3,[r0,#4]
                  |L1.166|
;;;106    }
0000a6  4770              BX       lr
;;;107    
                          ENDP

                  GPIO_DriveConfig PROC
;;;117     ************************************************************************************************************/
;;;118    void GPIO_DriveConfig(AM_GPIO_TypeDef* GPIOx, u16 GPIO_PIN, GPIO_DV_Enum Drive)
0000a8  2a00              CMP      r2,#0
;;;119    {
;;;120      if(Drive != GPIO_DV_3MA)
0000aa  d003              BEQ      |L1.180|
;;;121        GPIOx->DRVR |= GPIO_PIN ;
0000ac  6943              LDR      r3,[r0,#0x14]
0000ae  430b              ORRS     r3,r3,r1
0000b0  6143              STR      r3,[r0,#0x14]
0000b2  e002              B        |L1.186|
                  |L1.180|
;;;122      else
;;;123        GPIOx->DRVR &= ~GPIO_PIN ;
0000b4  6943              LDR      r3,[r0,#0x14]
0000b6  438b              BICS     r3,r3,r1
0000b8  6143              STR      r3,[r0,#0x14]
                  |L1.186|
;;;124    }
0000ba  4770              BX       lr
;;;125    
                          ENDP

                  GPIO_OpenDrainConfig PROC
;;;133     ************************************************************************************************************/
;;;134    void GPIO_OpenDrainConfig(AM_GPIO_TypeDef* GPIOx, u16 GPIO_PIN, ControlStatus Cmd)
0000bc  2a00              CMP      r2,#0
;;;135    {
;;;136      if(Cmd != DISABLE)
0000be  d003              BEQ      |L1.200|
;;;137        GPIOx->ODR |= GPIO_PIN ;
0000c0  6903              LDR      r3,[r0,#0x10]
0000c2  430b              ORRS     r3,r3,r1
0000c4  6103              STR      r3,[r0,#0x10]
0000c6  e002              B        |L1.206|
                  |L1.200|
;;;138      else
;;;139        GPIOx->ODR &= ~GPIO_PIN ;
0000c8  6903              LDR      r3,[r0,#0x10]
0000ca  438b              BICS     r3,r3,r1
0000cc  6103              STR      r3,[r0,#0x10]
                  |L1.206|
;;;140    }
0000ce  4770              BX       lr
;;;141    
                          ENDP

                  GPIO_ReadInBit PROC
;;;147     ************************************************************************************************************/
;;;148    FlagStatus GPIO_ReadInBit(AM_GPIO_TypeDef* GPIOx, u16 GPIO_PIN)
0000d0  4602              MOV      r2,r0
;;;149    {
;;;150      if ((GPIOx->DINR & GPIO_PIN) != RESET)
0000d2  69d0              LDR      r0,[r2,#0x1c]
0000d4  4008              ANDS     r0,r0,r1
0000d6  2800              CMP      r0,#0
0000d8  d001              BEQ      |L1.222|
;;;151        return SET;
0000da  2001              MOVS     r0,#1
                  |L1.220|
;;;152      else
;;;153        return RESET;
;;;154    }
0000dc  4770              BX       lr
                  |L1.222|
0000de  2000              MOVS     r0,#0                 ;153
0000e0  e7fc              B        |L1.220|
;;;155    
                          ENDP

                  GPIO_ReadInData PROC
;;;160     ************************************************************************************************************/
;;;161    u16 GPIO_ReadInData(AM_GPIO_TypeDef* GPIOx)
0000e2  4601              MOV      r1,r0
;;;162    {
;;;163      return ((u16)GPIOx->DINR);
0000e4  69c8              LDR      r0,[r1,#0x1c]
0000e6  b280              UXTH     r0,r0
;;;164    }
0000e8  4770              BX       lr
;;;165    
                          ENDP

                  GPIO_ReadOutBit PROC
;;;171     ************************************************************************************************************/
;;;172    FlagStatus GPIO_ReadOutBit(AM_GPIO_TypeDef* GPIOx, u16 GPIO_PIN)
0000ea  4602              MOV      r2,r0
;;;173    {
;;;174      if ((GPIOx->DOUTR & GPIO_PIN) != RESET)
0000ec  6a10              LDR      r0,[r2,#0x20]
0000ee  4008              ANDS     r0,r0,r1
0000f0  2800              CMP      r0,#0
0000f2  d001              BEQ      |L1.248|
;;;175        return SET;
0000f4  2001              MOVS     r0,#1
                  |L1.246|
;;;176      else
;;;177        return RESET;
;;;178    }
0000f6  4770              BX       lr
                  |L1.248|
0000f8  2000              MOVS     r0,#0                 ;177
0000fa  e7fc              B        |L1.246|
;;;179    
                          ENDP

                  GPIO_ReadOutData PROC
;;;184     ************************************************************************************************************/
;;;185    u16 GPIO_ReadOutData(AM_GPIO_TypeDef* GPIOx)
0000fc  4601              MOV      r1,r0
;;;186    {
;;;187      return ((u16)GPIOx->DOUTR);
0000fe  6a08              LDR      r0,[r1,#0x20]
000100  b280              UXTH     r0,r0
;;;188    }
000102  4770              BX       lr
;;;189    
                          ENDP

                  GPIO_SetOutBits PROC
;;;196     ************************************************************************************************************/
;;;197    void GPIO_SetOutBits(AM_GPIO_TypeDef* GPIOx, u16 GPIO_PIN)
000104  6241              STR      r1,[r0,#0x24]
;;;198    {
;;;199      GPIOx->SRR = GPIO_PIN;
;;;200    }
000106  4770              BX       lr
;;;201    
                          ENDP

                  GPIO_ClearOutBits PROC
;;;208     ************************************************************************************************************/
;;;209    void GPIO_ClearOutBits(AM_GPIO_TypeDef* GPIOx, u16 GPIO_PIN)
000108  6281              STR      r1,[r0,#0x28]
;;;210    {
;;;211      GPIOx->RR = GPIO_PIN;
;;;212    }
00010a  4770              BX       lr
;;;213    
                          ENDP

                  GPIO_WriteOutBits PROC
;;;224     ************************************************************************************************************/
;;;225    void GPIO_WriteOutBits(AM_GPIO_TypeDef* GPIOx, u16 GPIO_PIN, FlagStatus Status)
00010c  2a00              CMP      r2,#0
;;;226    {
;;;227      if (Status != RESET)
00010e  d001              BEQ      |L1.276|
;;;228        GPIOx->SRR = GPIO_PIN;
000110  6241              STR      r1,[r0,#0x24]
000112  e000              B        |L1.278|
                  |L1.276|
;;;229      else
;;;230        GPIOx->RR = GPIO_PIN;
000114  6281              STR      r1,[r0,#0x28]
                  |L1.278|
;;;231    }
000116  4770              BX       lr
;;;232    
                          ENDP

                  GPIO_WriteOutData PROC
;;;238     ************************************************************************************************************/
;;;239    void GPIO_WriteOutData(AM_GPIO_TypeDef* GPIOx, u16 Data)
000118  6201              STR      r1,[r0,#0x20]
;;;240    {
;;;241      GPIOx->DOUTR = Data;
;;;242    }
00011a  4770              BX       lr
;;;243    
                          ENDP

                  AFIO_EXTISourceConfig PROC
;;;251     ************************************************************************************************************/
;;;252    void AFIO_EXTISourceConfig(AFIO_EXTI_CH_Enum Channel, AFIO_ESS_Enum Source)
00011c  b530              PUSH     {r4,r5,lr}
;;;253    {
00011e  460a              MOV      r2,r1
;;;254      u8 index = 0 ;
000120  2300              MOVS     r3,#0
;;;255      u32 tmp = 0 ;
000122  2100              MOVS     r1,#0
;;;256    
;;;257      if(Channel > AFIO_EXTI_CH_7)
000124  281c              CMP      r0,#0x1c
000126  dd03              BLE      |L1.304|
;;;258      {
;;;259        index = 1 ;
000128  2301              MOVS     r3,#1
;;;260        Channel -= AFIO_EXTI_CH_8 ;
00012a  4604              MOV      r4,r0
00012c  3c20              SUBS     r4,r4,#0x20
00012e  b2e0              UXTB     r0,r4
                  |L1.304|
;;;261      }
;;;262    
;;;263      tmp = AM_AFIO->ESSR[index] ;
000130  009c              LSLS     r4,r3,#2
000132  4db7              LDR      r5,|L1.1040|
000134  1964              ADDS     r4,r4,r5
000136  6821              LDR      r1,[r4,#0]
;;;264      tmp &= ~((u32)0x0F << Channel) ;
000138  240f              MOVS     r4,#0xf
00013a  4084              LSLS     r4,r4,r0
00013c  460d              MOV      r5,r1
00013e  43a5              BICS     r5,r5,r4
000140  4629              MOV      r1,r5
;;;265      tmp |= (u32)Source << Channel ;
000142  4614              MOV      r4,r2
000144  4084              LSLS     r4,r4,r0
000146  4321              ORRS     r1,r1,r4
;;;266      AM_AFIO->ESSR[index] = tmp ;
000148  009c              LSLS     r4,r3,#2
00014a  4db1              LDR      r5,|L1.1040|
00014c  1964              ADDS     r4,r4,r5
00014e  6021              STR      r1,[r4,#0]
;;;267    
;;;268    }
000150  bd30              POP      {r4,r5,pc}
;;;269    
                          ENDP

                  GPIO_PinLock PROC
;;;276     ************************************************************************************************************/
;;;277    void GPIO_PinLock(AM_GPIO_TypeDef* GPIOx, u16 GPIO_PIN)
000152  4ab0              LDR      r2,|L1.1044|
;;;278    {
;;;279      GPIOx->LOCKR = (u32)0x5FA00000 | GPIO_PIN ;
000154  430a              ORRS     r2,r2,r1
000156  6182              STR      r2,[r0,#0x18]
;;;280    }
000158  4770              BX       lr
;;;281    
                          ENDP

                  GPIO_IsPortLocked PROC
;;;286     ************************************************************************************************************/
;;;287    bool GPIO_IsPortLocked(AM_GPIO_TypeDef* GPIOx)
00015a  4601              MOV      r1,r0
;;;288    {
;;;289      if((GPIOx->LOCKR >> 16) == 0)
00015c  6988              LDR      r0,[r1,#0x18]
00015e  0c00              LSRS     r0,r0,#16
000160  2800              CMP      r0,#0
000162  d100              BNE      |L1.358|
                  |L1.356|
;;;290        return FALSE ;
;;;291      else
;;;292        return TRUE ;
;;;293    }
000164  4770              BX       lr
                  |L1.358|
000166  2001              MOVS     r0,#1                 ;292
000168  e7fc              B        |L1.356|
;;;294    
                          ENDP

                  GPIO_IsPinLocked PROC
;;;300     ************************************************************************************************************/
;;;301    bool GPIO_IsPinLocked(AM_GPIO_TypeDef* GPIOx, u16 GPIO_PIN)
00016a  4602              MOV      r2,r0
;;;302    {
;;;303      if((GPIOx->LOCKR & GPIO_PIN) == 0)
00016c  6990              LDR      r0,[r2,#0x18]
00016e  4008              ANDS     r0,r0,r1
000170  2800              CMP      r0,#0
000172  d100              BNE      |L1.374|
                  |L1.372|
;;;304        return FALSE ;
;;;305      else
;;;306        return TRUE ;
;;;307    }
000174  4770              BX       lr
                  |L1.374|
000176  2001              MOVS     r0,#1                 ;306
000178  e7fc              B        |L1.372|
;;;308    
                          ENDP

                  AFIO_DeInit PROC
;;;312     ************************************************************************************************************/
;;;313    void AFIO_DeInit(void)
00017a  b510              PUSH     {r4,lr}
;;;314    {
;;;315      RSTCU_APBPerip0Reset(RSTCU_APBRST0_AFIO, ENABLE);
00017c  2101              MOVS     r1,#1
00017e  0388              LSLS     r0,r1,#14
000180  f7fffffe          BL       RSTCU_APBPerip0Reset
;;;316    }
000184  bd10              POP      {r4,pc}
;;;317    
                          ENDP

                  AFIO_GPAConfig PROC
;;;339     ************************************************************************************************************/
;;;340    void AFIO_GPAConfig(u32 AFIO_PIN, AFIO_MODE_Enum AFIO_MODE)
000186  b570              PUSH     {r4-r6,lr}
;;;341    {
000188  4602              MOV      r2,r0
00018a  460c              MOV      r4,r1
;;;342      u8 index = 0;
00018c  2000              MOVS     r0,#0
;;;343      u32 Mask = 0, PinMode = 0;
00018e  2100              MOVS     r1,#0
000190  2300              MOVS     r3,#0
;;;344    
;;;345      if(AFIO_PIN & 0x00FF)
000192  b2d5              UXTB     r5,r2
000194  2d00              CMP      r5,#0
000196  d019              BEQ      |L1.460|
;;;346      {
;;;347        for(index = 0; index < 8; index++)
000198  bf00              NOP      
00019a  e00f              B        |L1.444|
                  |L1.412|
;;;348        {
;;;349          if((AFIO_PIN>>index) & 0x0001)
00019c  4615              MOV      r5,r2
00019e  40c5              LSRS     r5,r5,r0
0001a0  07ed              LSLS     r5,r5,#31
0001a2  0fed              LSRS     r5,r5,#31
0001a4  2d00              CMP      r5,#0
0001a6  d007              BEQ      |L1.440|
;;;350          {
;;;351            Mask |= (0xF << (index*4));
0001a8  0086              LSLS     r6,r0,#2
0001aa  250f              MOVS     r5,#0xf
0001ac  40b5              LSLS     r5,r5,r6
0001ae  4329              ORRS     r1,r1,r5
;;;352            PinMode |= (AFIO_MODE << (index*4));
0001b0  0086              LSLS     r6,r0,#2
0001b2  4625              MOV      r5,r4
0001b4  40b5              LSLS     r5,r5,r6
0001b6  432b              ORRS     r3,r3,r5
                  |L1.440|
0001b8  1c45              ADDS     r5,r0,#1              ;347
0001ba  b2e8              UXTB     r0,r5                 ;347
                  |L1.444|
0001bc  2808              CMP      r0,#8                 ;347
0001be  dbed              BLT      |L1.412|
;;;353          }
;;;354        }
;;;355        AM_AFIO->GPACFGR[0] =(AM_AFIO->GPACFGR[0] & ~Mask) | PinMode;
0001c0  4d93              LDR      r5,|L1.1040|
0001c2  6a2d              LDR      r5,[r5,#0x20]
0001c4  438d              BICS     r5,r5,r1
0001c6  431d              ORRS     r5,r5,r3
0001c8  4e91              LDR      r6,|L1.1040|
0001ca  6235              STR      r5,[r6,#0x20]
                  |L1.460|
;;;356      }
;;;357    
;;;358      if(AFIO_PIN & 0xFF00)
0001cc  25ff              MOVS     r5,#0xff
0001ce  022d              LSLS     r5,r5,#8
0001d0  4015              ANDS     r5,r5,r2
0001d2  2d00              CMP      r5,#0
0001d4  d01c              BEQ      |L1.528|
;;;359      {
;;;360        Mask = 0;
0001d6  2100              MOVS     r1,#0
;;;361        PinMode = 0;
0001d8  2300              MOVS     r3,#0
;;;362    
;;;363        for(index = 0; index < 8; index++)
0001da  2000              MOVS     r0,#0
0001dc  e010              B        |L1.512|
                  |L1.478|
;;;364        {
;;;365          if((AFIO_PIN>>index) & 0x0100)
0001de  4615              MOV      r5,r2
0001e0  40c5              LSRS     r5,r5,r0
0001e2  26ff              MOVS     r6,#0xff
0001e4  3601              ADDS     r6,#1
0001e6  4035              ANDS     r5,r5,r6
0001e8  2d00              CMP      r5,#0
0001ea  d007              BEQ      |L1.508|
;;;366          {
;;;367            Mask |= (0xF << (index*4));
0001ec  0086              LSLS     r6,r0,#2
0001ee  250f              MOVS     r5,#0xf
0001f0  40b5              LSLS     r5,r5,r6
0001f2  4329              ORRS     r1,r1,r5
;;;368            PinMode |= (AFIO_MODE << (index*4));
0001f4  0086              LSLS     r6,r0,#2
0001f6  4625              MOV      r5,r4
0001f8  40b5              LSLS     r5,r5,r6
0001fa  432b              ORRS     r3,r3,r5
                  |L1.508|
0001fc  1c45              ADDS     r5,r0,#1              ;363
0001fe  b2e8              UXTB     r0,r5                 ;363
                  |L1.512|
000200  2808              CMP      r0,#8                 ;363
000202  dbec              BLT      |L1.478|
;;;369          }
;;;370        }
;;;371        AM_AFIO->GPACFGR[1] =(AM_AFIO->GPACFGR[1] & ~Mask) | PinMode;
000204  4d82              LDR      r5,|L1.1040|
000206  6a6d              LDR      r5,[r5,#0x24]
000208  438d              BICS     r5,r5,r1
00020a  431d              ORRS     r5,r5,r3
00020c  4e80              LDR      r6,|L1.1040|
00020e  6275              STR      r5,[r6,#0x24]
                  |L1.528|
;;;372      }
;;;373    }
000210  bd70              POP      {r4-r6,pc}
;;;374    
                          ENDP

                  AFIO_GPBConfig PROC
;;;396     ************************************************************************************************************/
;;;397    void AFIO_GPBConfig(u32 AFIO_PIN, AFIO_MODE_Enum AFIO_MODE)
000212  b570              PUSH     {r4-r6,lr}
;;;398    {
000214  4602              MOV      r2,r0
000216  460c              MOV      r4,r1
;;;399      u8 index = 0;
000218  2000              MOVS     r0,#0
;;;400      u32 Mask = 0, PinMode = 0;
00021a  2100              MOVS     r1,#0
00021c  2300              MOVS     r3,#0
;;;401    
;;;402      if(AFIO_PIN & 0x00FF)
00021e  b2d5              UXTB     r5,r2
000220  2d00              CMP      r5,#0
000222  d019              BEQ      |L1.600|
;;;403      {
;;;404        for(index = 0; index < 8; index++)
000224  bf00              NOP      
000226  e00f              B        |L1.584|
                  |L1.552|
;;;405        {
;;;406          if((AFIO_PIN>>index) & 0x0001)
000228  4615              MOV      r5,r2
00022a  40c5              LSRS     r5,r5,r0
00022c  07ed              LSLS     r5,r5,#31
00022e  0fed              LSRS     r5,r5,#31
000230  2d00              CMP      r5,#0
000232  d007              BEQ      |L1.580|
;;;407          {
;;;408            Mask |= (0xF << (index*4));
000234  0086              LSLS     r6,r0,#2
000236  250f              MOVS     r5,#0xf
000238  40b5              LSLS     r5,r5,r6
00023a  4329              ORRS     r1,r1,r5
;;;409            PinMode |= (AFIO_MODE << (index*4));
00023c  0086              LSLS     r6,r0,#2
00023e  4625              MOV      r5,r4
000240  40b5              LSLS     r5,r5,r6
000242  432b              ORRS     r3,r3,r5
                  |L1.580|
000244  1c45              ADDS     r5,r0,#1              ;404
000246  b2e8              UXTB     r0,r5                 ;404
                  |L1.584|
000248  2808              CMP      r0,#8                 ;404
00024a  dbed              BLT      |L1.552|
;;;410          }
;;;411        }
;;;412        AM_AFIO->GPBCFGR[0] =(AM_AFIO->GPBCFGR[0] & ~Mask) | PinMode;
00024c  4d70              LDR      r5,|L1.1040|
00024e  6aad              LDR      r5,[r5,#0x28]
000250  438d              BICS     r5,r5,r1
000252  431d              ORRS     r5,r5,r3
000254  4e6e              LDR      r6,|L1.1040|
000256  62b5              STR      r5,[r6,#0x28]
                  |L1.600|
;;;413      }
;;;414    
;;;415      if(AFIO_PIN & 0xFF00)
000258  25ff              MOVS     r5,#0xff
00025a  022d              LSLS     r5,r5,#8
00025c  4015              ANDS     r5,r5,r2
00025e  2d00              CMP      r5,#0
000260  d01c              BEQ      |L1.668|
;;;416      {
;;;417        Mask = 0;
000262  2100              MOVS     r1,#0
;;;418        PinMode = 0;
000264  2300              MOVS     r3,#0
;;;419    
;;;420        for(index = 0; index < 8; index++)
000266  2000              MOVS     r0,#0
000268  e010              B        |L1.652|
                  |L1.618|
;;;421        {
;;;422          if((AFIO_PIN>>index) & 0x0100)
00026a  4615              MOV      r5,r2
00026c  40c5              LSRS     r5,r5,r0
00026e  26ff              MOVS     r6,#0xff
000270  3601              ADDS     r6,#1
000272  4035              ANDS     r5,r5,r6
000274  2d00              CMP      r5,#0
000276  d007              BEQ      |L1.648|
;;;423          {
;;;424            Mask |= (0xF << (index*4));
000278  0086              LSLS     r6,r0,#2
00027a  250f              MOVS     r5,#0xf
00027c  40b5              LSLS     r5,r5,r6
00027e  4329              ORRS     r1,r1,r5
;;;425            PinMode |= (AFIO_MODE << (index*4));
000280  0086              LSLS     r6,r0,#2
000282  4625              MOV      r5,r4
000284  40b5              LSLS     r5,r5,r6
000286  432b              ORRS     r3,r3,r5
                  |L1.648|
000288  1c45              ADDS     r5,r0,#1              ;420
00028a  b2e8              UXTB     r0,r5                 ;420
                  |L1.652|
00028c  2808              CMP      r0,#8                 ;420
00028e  dbec              BLT      |L1.618|
;;;426          }
;;;427        }
;;;428        AM_AFIO->GPBCFGR[1] =(AM_AFIO->GPBCFGR[1] & ~Mask) | PinMode;
000290  4d5f              LDR      r5,|L1.1040|
000292  6aed              LDR      r5,[r5,#0x2c]
000294  438d              BICS     r5,r5,r1
000296  431d              ORRS     r5,r5,r3
000298  4e5d              LDR      r6,|L1.1040|
00029a  62f5              STR      r5,[r6,#0x2c]
                  |L1.668|
;;;429      }
;;;430    }
00029c  bd70              POP      {r4-r6,pc}
;;;431    
                          ENDP

                  AFIO_GPCConfig PROC
;;;453     ************************************************************************************************************/
;;;454    void AFIO_GPCConfig(u32 AFIO_PIN, AFIO_MODE_Enum AFIO_MODE)
00029e  b570              PUSH     {r4-r6,lr}
;;;455    {
0002a0  4602              MOV      r2,r0
0002a2  460c              MOV      r4,r1
;;;456      u8 index = 0;
0002a4  2000              MOVS     r0,#0
;;;457      u32 Mask = 0, PinMode = 0;
0002a6  2100              MOVS     r1,#0
0002a8  2300              MOVS     r3,#0
;;;458    
;;;459      if(AFIO_PIN & 0x00FF)
0002aa  b2d5              UXTB     r5,r2
0002ac  2d00              CMP      r5,#0
0002ae  d019              BEQ      |L1.740|
;;;460      {
;;;461        for(index = 0; index < 8; index++)
0002b0  bf00              NOP      
0002b2  e00f              B        |L1.724|
                  |L1.692|
;;;462        {
;;;463          if((AFIO_PIN>>index) & 0x0001)
0002b4  4615              MOV      r5,r2
0002b6  40c5              LSRS     r5,r5,r0
0002b8  07ed              LSLS     r5,r5,#31
0002ba  0fed              LSRS     r5,r5,#31
0002bc  2d00              CMP      r5,#0
0002be  d007              BEQ      |L1.720|
;;;464          {
;;;465            Mask |= (0xF << (index*4));
0002c0  0086              LSLS     r6,r0,#2
0002c2  250f              MOVS     r5,#0xf
0002c4  40b5              LSLS     r5,r5,r6
0002c6  4329              ORRS     r1,r1,r5
;;;466            PinMode |= (AFIO_MODE << (index*4));
0002c8  0086              LSLS     r6,r0,#2
0002ca  4625              MOV      r5,r4
0002cc  40b5              LSLS     r5,r5,r6
0002ce  432b              ORRS     r3,r3,r5
                  |L1.720|
0002d0  1c45              ADDS     r5,r0,#1              ;461
0002d2  b2e8              UXTB     r0,r5                 ;461
                  |L1.724|
0002d4  2808              CMP      r0,#8                 ;461
0002d6  dbed              BLT      |L1.692|
;;;467          }
;;;468        }
;;;469        AM_AFIO->GPCCFGR[0] =(AM_AFIO->GPCCFGR[0] & ~Mask) | PinMode;
0002d8  4d4d              LDR      r5,|L1.1040|
0002da  6b2d              LDR      r5,[r5,#0x30]
0002dc  438d              BICS     r5,r5,r1
0002de  431d              ORRS     r5,r5,r3
0002e0  4e4b              LDR      r6,|L1.1040|
0002e2  6335              STR      r5,[r6,#0x30]
                  |L1.740|
;;;470      }
;;;471    
;;;472      if(AFIO_PIN & 0xFF00)
0002e4  25ff              MOVS     r5,#0xff
0002e6  022d              LSLS     r5,r5,#8
0002e8  4015              ANDS     r5,r5,r2
0002ea  2d00              CMP      r5,#0
0002ec  d01c              BEQ      |L1.808|
;;;473      {
;;;474        Mask = 0;
0002ee  2100              MOVS     r1,#0
;;;475        PinMode = 0;
0002f0  2300              MOVS     r3,#0
;;;476    
;;;477        for(index = 0; index < 8; index++)
0002f2  2000              MOVS     r0,#0
0002f4  e010              B        |L1.792|
                  |L1.758|
;;;478        {
;;;479          if((AFIO_PIN>>index) & 0x0100)
0002f6  4615              MOV      r5,r2
0002f8  40c5              LSRS     r5,r5,r0
0002fa  26ff              MOVS     r6,#0xff
0002fc  3601              ADDS     r6,#1
0002fe  4035              ANDS     r5,r5,r6
000300  2d00              CMP      r5,#0
000302  d007              BEQ      |L1.788|
;;;480          {
;;;481            Mask |= (0xF << (index*4));
000304  0086              LSLS     r6,r0,#2
000306  250f              MOVS     r5,#0xf
000308  40b5              LSLS     r5,r5,r6
00030a  4329              ORRS     r1,r1,r5
;;;482            PinMode |= (AFIO_MODE << (index*4));
00030c  0086              LSLS     r6,r0,#2
00030e  4625              MOV      r5,r4
000310  40b5              LSLS     r5,r5,r6
000312  432b              ORRS     r3,r3,r5
                  |L1.788|
000314  1c45              ADDS     r5,r0,#1              ;477
000316  b2e8              UXTB     r0,r5                 ;477
                  |L1.792|
000318  2808              CMP      r0,#8                 ;477
00031a  dbec              BLT      |L1.758|
;;;483          }
;;;484        }
;;;485        AM_AFIO->GPCCFGR[1] =(AM_AFIO->GPCCFGR[1] & ~Mask) | PinMode;
00031c  4d3c              LDR      r5,|L1.1040|
00031e  6b6d              LDR      r5,[r5,#0x34]
000320  438d              BICS     r5,r5,r1
000322  431d              ORRS     r5,r5,r3
000324  4e3a              LDR      r6,|L1.1040|
000326  6375              STR      r5,[r6,#0x34]
                  |L1.808|
;;;486      }
;;;487    }
000328  bd70              POP      {r4-r6,pc}
;;;488    
                          ENDP

                  AFIO_GPDConfig PROC
;;;510     ************************************************************************************************************/
;;;511    void AFIO_GPDConfig(u32 AFIO_PIN, AFIO_MODE_Enum AFIO_MODE)
00032a  b570              PUSH     {r4-r6,lr}
;;;512    {
00032c  4602              MOV      r2,r0
00032e  460c              MOV      r4,r1
;;;513      u8 index = 0;
000330  2000              MOVS     r0,#0
;;;514      u32 Mask = 0, PinMode = 0;
000332  2100              MOVS     r1,#0
000334  2300              MOVS     r3,#0
;;;515    
;;;516      if(AFIO_PIN & 0x00FF)
000336  b2d5              UXTB     r5,r2
000338  2d00              CMP      r5,#0
00033a  d019              BEQ      |L1.880|
;;;517      {
;;;518        for(index = 0; index < 8; index++)
00033c  bf00              NOP      
00033e  e00f              B        |L1.864|
                  |L1.832|
;;;519        {
;;;520          if((AFIO_PIN>>index) & 0x0001)
000340  4615              MOV      r5,r2
000342  40c5              LSRS     r5,r5,r0
000344  07ed              LSLS     r5,r5,#31
000346  0fed              LSRS     r5,r5,#31
000348  2d00              CMP      r5,#0
00034a  d007              BEQ      |L1.860|
;;;521          {
;;;522            Mask |= (0xF << (index*4));
00034c  0086              LSLS     r6,r0,#2
00034e  250f              MOVS     r5,#0xf
000350  40b5              LSLS     r5,r5,r6
000352  4329              ORRS     r1,r1,r5
;;;523            PinMode |= (AFIO_MODE << (index*4));
000354  0086              LSLS     r6,r0,#2
000356  4625              MOV      r5,r4
000358  40b5              LSLS     r5,r5,r6
00035a  432b              ORRS     r3,r3,r5
                  |L1.860|
00035c  1c45              ADDS     r5,r0,#1              ;518
00035e  b2e8              UXTB     r0,r5                 ;518
                  |L1.864|
000360  2808              CMP      r0,#8                 ;518
000362  dbed              BLT      |L1.832|
;;;524          }
;;;525        }
;;;526        AM_AFIO->GPDCFGR[0] =(AM_AFIO->GPDCFGR[0] & ~Mask) | PinMode;
000364  4d2a              LDR      r5,|L1.1040|
000366  6bad              LDR      r5,[r5,#0x38]
000368  438d              BICS     r5,r5,r1
00036a  431d              ORRS     r5,r5,r3
00036c  4e28              LDR      r6,|L1.1040|
00036e  63b5              STR      r5,[r6,#0x38]
                  |L1.880|
;;;527      }
;;;528    
;;;529      if(AFIO_PIN & 0xFF00)
000370  25ff              MOVS     r5,#0xff
000372  022d              LSLS     r5,r5,#8
000374  4015              ANDS     r5,r5,r2
000376  2d00              CMP      r5,#0
000378  d01c              BEQ      |L1.948|
;;;530      {
;;;531        Mask = 0;
00037a  2100              MOVS     r1,#0
;;;532        PinMode = 0;
00037c  2300              MOVS     r3,#0
;;;533    
;;;534        for(index = 0; index < 8; index++)
00037e  2000              MOVS     r0,#0
000380  e010              B        |L1.932|
                  |L1.898|
;;;535        {
;;;536          if((AFIO_PIN>>index) & 0x0100)
000382  4615              MOV      r5,r2
000384  40c5              LSRS     r5,r5,r0
000386  26ff              MOVS     r6,#0xff
000388  3601              ADDS     r6,#1
00038a  4035              ANDS     r5,r5,r6
00038c  2d00              CMP      r5,#0
00038e  d007              BEQ      |L1.928|
;;;537          {
;;;538            Mask |= (0xF << (index*4));
000390  0086              LSLS     r6,r0,#2
000392  250f              MOVS     r5,#0xf
000394  40b5              LSLS     r5,r5,r6
000396  4329              ORRS     r1,r1,r5
;;;539            PinMode |= (AFIO_MODE << (index*4));
000398  0086              LSLS     r6,r0,#2
00039a  4625              MOV      r5,r4
00039c  40b5              LSLS     r5,r5,r6
00039e  432b              ORRS     r3,r3,r5
                  |L1.928|
0003a0  1c45              ADDS     r5,r0,#1              ;534
0003a2  b2e8              UXTB     r0,r5                 ;534
                  |L1.932|
0003a4  2808              CMP      r0,#8                 ;534
0003a6  dbec              BLT      |L1.898|
;;;540          }
;;;541        }
;;;542        AM_AFIO->GPDCFGR[1] =(AM_AFIO->GPDCFGR[1] & ~Mask) | PinMode;
0003a8  4d19              LDR      r5,|L1.1040|
0003aa  6bed              LDR      r5,[r5,#0x3c]
0003ac  438d              BICS     r5,r5,r1
0003ae  431d              ORRS     r5,r5,r3
0003b0  4e17              LDR      r6,|L1.1040|
0003b2  63f5              STR      r5,[r6,#0x3c]
                  |L1.948|
;;;543      }
;;;544    }
0003b4  bd70              POP      {r4-r6,pc}
;;;545    
                          ENDP

                  AFIO_GPEConfig PROC
;;;567     ************************************************************************************************************/
;;;568    void AFIO_GPEConfig(u32 AFIO_PIN, AFIO_MODE_Enum AFIO_MODE)
0003b6  b570              PUSH     {r4-r6,lr}
;;;569    {
0003b8  4602              MOV      r2,r0
0003ba  460c              MOV      r4,r1
;;;570      u8 index = 0;
0003bc  2000              MOVS     r0,#0
;;;571      u32 Mask = 0, PinMode = 0;
0003be  2100              MOVS     r1,#0
0003c0  2300              MOVS     r3,#0
;;;572    
;;;573      if(AFIO_PIN & 0x00FF)
0003c2  b2d5              UXTB     r5,r2
0003c4  2d00              CMP      r5,#0
0003c6  d028              BEQ      |L1.1050|
;;;574      {
;;;575        for(index = 0; index < 8; index++)
0003c8  bf00              NOP      
0003ca  e00f              B        |L1.1004|
                  |L1.972|
;;;576        {
;;;577          if((AFIO_PIN>>index) & 0x0001)
0003cc  4615              MOV      r5,r2
0003ce  40c5              LSRS     r5,r5,r0
0003d0  07ed              LSLS     r5,r5,#31
0003d2  0fed              LSRS     r5,r5,#31
0003d4  2d00              CMP      r5,#0
0003d6  d007              BEQ      |L1.1000|
;;;578          {
;;;579            Mask |= (0xF << (index*4));
0003d8  0086              LSLS     r6,r0,#2
0003da  250f              MOVS     r5,#0xf
0003dc  40b5              LSLS     r5,r5,r6
0003de  4329              ORRS     r1,r1,r5
;;;580            PinMode |= (AFIO_MODE << (index*4));
0003e0  0086              LSLS     r6,r0,#2
0003e2  4625              MOV      r5,r4
0003e4  40b5              LSLS     r5,r5,r6
0003e6  432b              ORRS     r3,r3,r5
                  |L1.1000|
0003e8  1c45              ADDS     r5,r0,#1              ;575
0003ea  b2e8              UXTB     r0,r5                 ;575
                  |L1.1004|
0003ec  2808              CMP      r0,#8                 ;575
0003ee  dbed              BLT      |L1.972|
;;;581          }
;;;582        }
;;;583        AM_AFIO->GPECFGR[0] =(AM_AFIO->GPECFGR[0] & ~Mask) | PinMode;
0003f0  4d07              LDR      r5,|L1.1040|
0003f2  3540              ADDS     r5,r5,#0x40
0003f4  682d              LDR      r5,[r5,#0]
0003f6  438d              BICS     r5,r5,r1
0003f8  431d              ORRS     r5,r5,r3
0003fa  4e05              LDR      r6,|L1.1040|
0003fc  3640              ADDS     r6,r6,#0x40
0003fe  e00b              B        |L1.1048|
                  |L1.1024|
                          DCD      0x400b0000
                  |L1.1028|
                          DCD      0x400b2000
                  |L1.1032|
                          DCD      0x400b4000
                  |L1.1036|
                          DCD      0x400b6000
                  |L1.1040|
                          DCD      0x40022000
                  |L1.1044|
                          DCD      0x5fa00000
                  |L1.1048|
000418  6035              STR      r5,[r6,#0]
                  |L1.1050|
;;;584      }
;;;585    
;;;586      if(AFIO_PIN & 0xFF00)
00041a  25ff              MOVS     r5,#0xff
00041c  022d              LSLS     r5,r5,#8
00041e  4015              ANDS     r5,r5,r2
000420  2d00              CMP      r5,#0
000422  d01c              BEQ      |L1.1118|
;;;587      {
;;;588        Mask = 0;
000424  2100              MOVS     r1,#0
;;;589        PinMode = 0;
000426  2300              MOVS     r3,#0
;;;590    
;;;591        for(index = 0; index < 8; index++)
000428  2000              MOVS     r0,#0
00042a  e010              B        |L1.1102|
                  |L1.1068|
;;;592        {
;;;593          if((AFIO_PIN>>index) & 0x0100)
00042c  4615              MOV      r5,r2
00042e  40c5              LSRS     r5,r5,r0
000430  26ff              MOVS     r6,#0xff
000432  3601              ADDS     r6,#1
000434  4035              ANDS     r5,r5,r6
000436  2d00              CMP      r5,#0
000438  d007              BEQ      |L1.1098|
;;;594          {
;;;595            Mask |= (0xF << (index*4));
00043a  0086              LSLS     r6,r0,#2
00043c  250f              MOVS     r5,#0xf
00043e  40b5              LSLS     r5,r5,r6
000440  4329              ORRS     r1,r1,r5
;;;596            PinMode |= (AFIO_MODE << (index*4));
000442  0086              LSLS     r6,r0,#2
000444  4625              MOV      r5,r4
000446  40b5              LSLS     r5,r5,r6
000448  432b              ORRS     r3,r3,r5
                  |L1.1098|
00044a  1c45              ADDS     r5,r0,#1              ;591
00044c  b2e8              UXTB     r0,r5                 ;591
                  |L1.1102|
00044e  2808              CMP      r0,#8                 ;591
000450  dbec              BLT      |L1.1068|
;;;597          }
;;;598        }
;;;599        AM_AFIO->GPECFGR[1] =(AM_AFIO->GPECFGR[1] & ~Mask) | PinMode;
000452  4d0c              LDR      r5,|L1.1156|
000454  6c6d              LDR      r5,[r5,#0x44]
000456  438d              BICS     r5,r5,r1
000458  431d              ORRS     r5,r5,r3
00045a  4e0a              LDR      r6,|L1.1156|
00045c  6475              STR      r5,[r6,#0x44]
                  |L1.1118|
;;;600      }
;;;601    }
00045e  bd70              POP      {r4-r6,pc}
;;;602    
                          ENDP

                  exti_clear_edge_flag PROC
;;;608     ************************************************************************************************************/
;;;609    FlagStatus exti_clear_edge_flag(AFIO_EXTI_CH_Enum exti_line_x)
000460  b530              PUSH     {r4,r5,lr}
;;;610    {
000462  4601              MOV      r1,r0
;;;611    	AM_EXTI_TypeDef *pAM_EXTI = AM_EXTI;
000464  4a08              LDR      r2,|L1.1160|
;;;612    	uint32_t reg_val;
;;;613    
;;;614    	pAM_EXTI->EDGEFLGR |= (1<<(exti_line_x>>2));
000466  6c50              LDR      r0,[r2,#0x44]
000468  108d              ASRS     r5,r1,#2
00046a  2401              MOVS     r4,#1
00046c  40ac              LSLS     r4,r4,r5
00046e  4320              ORRS     r0,r0,r4
000470  6450              STR      r0,[r2,#0x44]
;;;615    	reg_val = pAM_EXTI->EDGEFLGR;
000472  6c53              LDR      r3,[r2,#0x44]
;;;616    	if( (reg_val&(exti_line_x>>2)) == 0)
000474  1088              ASRS     r0,r1,#2
000476  4018              ANDS     r0,r0,r3
000478  2800              CMP      r0,#0
00047a  d100              BNE      |L1.1150|
                  |L1.1148|
;;;617    		return RESET;
;;;618    	else
;;;619    	{
;;;620    		return SET;
;;;621    	}
;;;622    }
00047c  bd30              POP      {r4,r5,pc}
                  |L1.1150|
00047e  2001              MOVS     r0,#1                 ;620
000480  e7fc              B        |L1.1148|
;;;623    /**
                          ENDP

000482  0000              DCW      0x0000
                  |L1.1156|
                          DCD      0x40022000
                  |L1.1160|
                          DCD      0x40024000

;*** Start embedded assembler ***

#line 1 "..\\driver\\src\\gpio.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___6_gpio_c_f8e8e39a____REV16|
#line 114 "..\\inc\\core_cmInstr.h"
|__asm___6_gpio_c_f8e8e39a____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___6_gpio_c_f8e8e39a____REVSH|
#line 128
|__asm___6_gpio_c_f8e8e39a____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
